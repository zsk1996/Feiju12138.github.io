<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Wed, 23 Sep 2020 13:17:03 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【笔记】Npm学习笔记</title>
      <link>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Wed, 23 Sep 2020 12:57:41 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;npm（全称 Node Package Manager，即“node包管理器”）是Node.js默认的、用JavaScript编写的软件包管理系统。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Npm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>npm（全称 Node Package Manager，即“node包管理器”）是Node.js默认的、用JavaScript编写的软件包管理系统。（<a href="https://zh.wikipedia.org/wiki/Npm" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="安装Npm"><a href="#安装Npm" class="headerlink" title="安装Npm"></a>安装Npm</h2><ul><li>安装Nodejs默认会预装Npm</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h2 id="模块位置"><a href="#模块位置" class="headerlink" title="模块位置"></a>模块位置</h2><h3 id="本地位置"><a href="#本地位置" class="headerlink" title="本地位置"></a>本地位置</h3><ul><li>在终端当前目录下会产生<code>node_modules</code>目录</li></ul><h3 id="全局位置"><a href="#全局位置" class="headerlink" title="全局位置"></a>全局位置</h3><ul><li>MacOS会在<code>/usr/local/lib/</code>目录下产生<code>node_modules</code>目录</li></ul><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><blockquote><p><code>&lt;package&gt;</code>：软件包名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package&gt;</span><br></pre></td></tr></table></figure><h3 id="全局操作"><a href="#全局操作" class="headerlink" title="全局操作"></a>全局操作</h3><blockquote><p><code>-g</code>：全局操作</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package&gt; -g</span><br></pre></td></tr></table></figure><h4 id="升级自身"><a href="#升级自身" class="headerlink" title="升级自身"></a>升级自身</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm -g</span><br></pre></td></tr></table></figure><h2 id="卸载模块"><a href="#卸载模块" class="headerlink" title="卸载模块"></a>卸载模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="查看已安装模块"><a href="#查看已安装模块" class="headerlink" title="查看已安装模块"></a>查看已安装模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm ls</span><br><span class="line">npm list</span><br></pre></td></tr></table></figure><h3 id="查看指定已安装模块"><a href="#查看指定已安装模块" class="headerlink" title="查看指定已安装模块"></a>查看指定已安装模块</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="查找模块"><a href="#查找模块" class="headerlink" title="查找模块"></a>查找模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm search &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="升级模块"><a href="#升级模块" class="headerlink" title="升级模块"></a>升级模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="清空本地缓存"><a href="#清空本地缓存" class="headerlink" title="清空本地缓存"></a>清空本地缓存</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clear</span><br></pre></td></tr></table></figure><h2 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="查看指定命令帮助"><a href="#查看指定命令帮助" class="headerlink" title="查看指定命令帮助"></a>查看指定命令帮助</h3><blockquote><p><code>&lt;command&gt;</code>：命令名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用淘宝镜像</h2><ul><li>国内使用淘宝镜像实现加速效果</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm</span><br><span class="line"></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="国内版Npm命令"><a href="#国内版Npm命令" class="headerlink" title="国内版Npm命令"></a>国内版Npm命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.runoob.com/nodejs/nodejs-npm.html" target="_blank" rel="noopener">菜鸟笔记</a><br><a href="https://blog.csdn.net/idomyway/article/details/85226579" target="_blank" rel="noopener">CSDN——idomyway</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】SpringBoot 发邮件</title>
      <link>https://feiju12138.github.io/2020/09/23/SpringBoot%E5%8F%91%E9%82%AE%E4%BB%B6/</link>
      <guid>https://feiju12138.github.io/2020/09/23/SpringBoot%E5%8F%91%E9%82%AE%E4%BB%B6/</guid>
      <pubDate>Wed, 23 Sep 2020 08:15:15 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目实现发邮件，案例通过QQ邮箱实现&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目实现发邮件，案例通过QQ邮箱实现</p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>导入依赖</li></ul><blockquote><p><code>Spring Web</code><br><code>Java Mail Sender</code></p></blockquote><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><ul><li>修改<code>application.properties</code>项目配置文件</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">80</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.mail.host</span>=<span class="string">smtp.qq.com</span></span><br><span class="line"><span class="comment">#改成自己的邮箱</span></span><br><span class="line"><span class="meta">spring.mail.username</span>=<span class="string">000000@qq.com</span></span><br><span class="line"><span class="comment">#邮箱的密码(QQ邮箱需要使用授权码)</span></span><br><span class="line"><span class="meta">spring.mail.password</span>=<span class="string">000000</span></span><br><span class="line"><span class="meta">spring.mail.default-encoding</span>=<span class="string">utf-8</span></span><br><span class="line"><span class="meta">spring.mail.properties.mail.smtp.auth</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.mail.properties.mail.smtp.starttls.enable</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.mail.properties.mail.smtp.starttls.required</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><ul><li>创建Controller做测试</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package com.cy.mail.pj;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.mail.SimpleMailMessage;</span><br><span class="line">import org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line">import java.io.StringWriter;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class MailController &#123;</span><br><span class="line"></span><br><span class="line">    //加上autowired之后，框架创建一个JavaMailSender，赋值给javaMailSender</span><br><span class="line">    @Autowired</span><br><span class="line">    JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    public void sendMail(String subject, String text) &#123;</span><br><span class="line">        //创建一封邮件</span><br><span class="line">        SimpleMailMessage mailMessage = new SimpleMailMessage();</span><br><span class="line">        //设置收件人</span><br><span class="line">        mailMessage.setTo(<span class="string">"000000@qq.com"</span>);</span><br><span class="line">        //设置发件人</span><br><span class="line">        mailMessage.setFrom(<span class="string">"000000@qq.com"</span>);</span><br><span class="line">        //设置标题</span><br><span class="line">        mailMessage.setSubject(subject);</span><br><span class="line">        //设置正文</span><br><span class="line">        mailMessage.setText(text);</span><br><span class="line">        //发送邮件</span><br><span class="line">        javaMailSender.send(mailMessage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 成功案例</span><br><span class="line">    @RequestMapping(<span class="string">"/send1"</span>)</span><br><span class="line">    public String <span class="function"><span class="title">send1</span></span>() &#123;</span><br><span class="line">        sendMail(<span class="string">"邮件标题"</span>, <span class="string">"邮件正文"</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"发送成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 失败案例</span><br><span class="line">    @RequestMapping(<span class="string">"/send2"</span>)</span><br><span class="line">    public String <span class="function"><span class="title">send2</span></span>() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            int n = 10 / 0;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            //异常信息打印到服务器中，程序员看不到</span><br><span class="line">            //e.printStackTrace();</span><br><span class="line">            //把异常信息转成字符串</span><br><span class="line">            StringWriter stingWriter = new StringWriter();</span><br><span class="line">            PrintWriter printWriter = new PrintWriter(stingWriter);</span><br><span class="line">            e.printStackTrace(printWriter);</span><br><span class="line">            String execeptionInfo = stingWriter.toString();</span><br><span class="line">            //<span class="built_in">return</span> execeptionInfo;</span><br><span class="line">            this.sendMail(<span class="string">"异常信息"</span>, execeptionInfo);</span><br><span class="line">            <span class="built_in">return</span> <span class="string">"发送失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"发送成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><ul><li>访问<code>http://localhost/send1</code>测试发送成功效果</li><li>访问<code>http://localhost/send2</code>测试发送失败效果</li></ul>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/23/SpringBoot%E5%8F%91%E9%82%AE%E4%BB%B6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【踩坑】IDEA Spring Boot IOC 注入报错</title>
      <link>https://feiju12138.github.io/2020/09/23/IDEASpringBootIOC%E6%B3%A8%E5%85%A5%E6%8A%A5%E9%94%99/</link>
      <guid>https://feiju12138.github.io/2020/09/23/IDEASpringBootIOC%E6%B3%A8%E5%85%A5%E6%8A%A5%E9%94%99/</guid>
      <pubDate>Wed, 23 Sep 2020 00:07:34 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;踩坑：IDEA Spring Boot IOC 注入报错&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>踩坑：IDEA Spring Boot IOC 注入报错</p><a id="more"></a><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li><code>@Autowired</code>注解为类型注入，<code>@Resource</code>注解为名称注入，所以IDEA在检查<code>@Autowired</code>拼写时，会检查类型，但是DAO层的实现类是由Mybatis框架创建，而且没有在<code>&lt;bean&gt;&lt;/bean&gt;</code>标签指定bean，所以会报错，但可以正常编译和运行</li></ul><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ul><li><p>将所有<code>@Autowired</code>注入改为<code>@Resource</code>注入</p></li><li><p>或者暴力的通过降低IDEA警告等级来解决</p></li><li><p><code>IntelliJ IDEA</code>-&gt;<code>Preferences</code>-&gt;<code>Editor</code>-&gt;<code>Inspactions</code>-&gt;搜索<code>Spring</code>-&gt;选中<code>Autowiring for bean class</code>并将<code>Serverity</code>的值由<code>Error</code>改为<code>Warning</code></p></li></ul><p><img src="/images/20200923080734/01.png" alt="01.png"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/HeatDeath/article/details/79691506" target="_blank" rel="noopener">CSDN——HeatDeath</a><br><a href="https://segmentfault.com/a/1190000019766877" target="_blank" rel="noopener">segmentfault——御龙镜中潜</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/23/IDEASpringBootIOC%E6%B3%A8%E5%85%A5%E6%8A%A5%E9%94%99/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Gradle学习笔记</title>
      <link>https://feiju12138.github.io/2020/09/21/Gradle%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/09/21/Gradle%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Mon, 21 Sep 2020 00:11:40 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化建构工具。Gradle 构建脚本使用的是 Groovy 或 Kotlin 的特定领域语言来编写的，而不是传统的XML。&lt;br&gt;当前官方支持的语言为Java、Groovy、Scala、C++、Swift、JavaScript等以及Spring框架。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Gradle&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化建构工具。Gradle 构建脚本使用的是 Groovy 或 Kotlin 的特定领域语言来编写的，而不是传统的XML。<br>当前官方支持的语言为Java、Groovy、Scala、C++、Swift、JavaScript等以及Spring框架。（<a href="https://zh.wikipedia.org/wiki/Gradle" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>Gradle项目的配置文件为使用Groovy语言编写的<code>build.gradle</code>文件</p></li><li><p>通过IDEA创建Gradle项目会生成如下模版</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'java'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">group <span class="string">'org.example'</span></span><br><span class="line">version <span class="string">'1.0-SNAPSHOT'</span></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    testCompile <span class="string">group:</span> <span class="string">'junit'</span>, <span class="string">name:</span> <span class="string">'junit'</span>, <span class="string">version:</span> <span class="string">'4.12'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>mavenCentral()</code>：指定所使用的仓库。表示使用中央仓库<br><code>testCompile</code>：作用域。表示当前依赖在测试的时候起作用<br><code>group</code>：定义依赖的组名<br><code>group</code>：定义依赖的项目名<br><code>group</code>：定义依赖的版本号</p></blockquote><h2 id="未完待更"><a href="#未完待更" class="headerlink" title="未完待更"></a>未完待更</h2><p><a href="https://www.bilibili.com/video/BV1At411375J" target="_blank" rel="noopener">哔哩哔哩——代码基基</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/21/Gradle%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【代码】递归方法求质数</title>
      <link>https://feiju12138.github.io/2020/09/19/%E9%80%92%E5%BD%92%E6%96%B9%E6%B3%95%E6%B1%82%E8%B4%A8%E6%95%B0/</link>
      <guid>https://feiju12138.github.io/2020/09/19/%E9%80%92%E5%BD%92%E6%96%B9%E6%B3%95%E6%B1%82%E8%B4%A8%E6%95%B0/</guid>
      <pubDate>Sat, 19 Sep 2020 11:00:47 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通过递归的方法求一个数是否是质数&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通过递归的方法求一个数是否是质数</p><a id="more"></a><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><h3 id="未使用递归"><a href="#未使用递归" class="headerlink" title="未使用递归"></a>未使用递归</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationDefault</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"输入一个数："</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> num = sc.nextInt();</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">0</span> || i==<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (num%i==<span class="number">0</span>) &#123;</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            System.out.println(<span class="string">"是质数"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"不是质数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用递归"><a href="#使用递归" class="headerlink" title="使用递归"></a>使用递归</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"输入一个数："</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> num = sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (num==<span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"既不是质数，也不是合数"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num==<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"是质数"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num==<span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"是质数"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num&lt;<span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"输入的数字有误"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">boolean</span> flag = isPrime(num);</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                System.out.println(<span class="string">"是质数"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"不是质数"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> point = <span class="number">2</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (point==(num-<span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (num%point==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        point++;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>&amp;&amp;isPrime(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/19/%E9%80%92%E5%BD%92%E6%96%B9%E6%B3%95%E6%B1%82%E8%B4%A8%E6%95%B0/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
