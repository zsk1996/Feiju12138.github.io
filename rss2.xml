<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Mon, 14 Sep 2020 00:11:50 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【笔记】Windows右键打开当前位置的CMD</title>
      <link>https://feiju12138.github.io/2020/09/14/Windows%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E7%9A%84CMD/</link>
      <guid>https://feiju12138.github.io/2020/09/14/Windows%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E7%9A%84CMD/</guid>
      <pubDate>Mon, 14 Sep 2020 00:08:07 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Windows右键打开当前位置的CMD&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Windows右键打开当前位置的CMD</p><a id="more"></a><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><ul><li>新建<code>.reg</code>文件，编辑内容并保存</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCMDHere]</span><br><span class="line"><span class="string">"ShowBasedOnVelocityId"</span>=dword:00639bc8</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCMDHere\<span class="built_in">command</span>]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd \"%V\""</span></span><br></pre></td></tr></table></figure><ul><li>执行脚本</li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.cnblogs.com/ssooking/p/8536468.html" target="_blank" rel="noopener">ssooking的博客</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/14/Windows%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80%E5%BD%93%E5%89%8D%E4%BD%8D%E7%BD%AE%E7%9A%84CMD/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Windows手动安装Mysql</title>
      <link>https://feiju12138.github.io/2020/09/13/Windows%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85Mysql/</link>
      <guid>https://feiju12138.github.io/2020/09/13/Windows%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85Mysql/</guid>
      <pubDate>Sun, 13 Sep 2020 09:32:54 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Windows手动安装Mysql 5.7.30&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Windows手动安装Mysql 5.7.30</p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>Mysql 5.7.30 Windows ZIP Archive <a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noopener">传送门</a></li></ul><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><ul><li>初始化</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --user=mysql --console</span><br></pre></td></tr></table></figure><ul><li>安装服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -install</span><br></pre></td></tr></table></figure><ul><li>启动服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><ul><li><p>报错：<code>Install/Remove of the Service Denied!</code></p></li><li><p>原因：权限不足</p></li><li><p>解决问题：用管理员身份打开cmd</p></li></ul><h3 id="踩坑-1"><a href="#踩坑-1" class="headerlink" title="踩坑"></a>踩坑</h3><ul><li>默认有初始密码且找不到</li></ul><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><ul><li>关闭mysql服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop MySQL</span><br></pre></td></tr></table></figure><ul><li>先用一个cmd通过安全模式启动mysql服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --skip-grant-tables</span><br></pre></td></tr></table></figure><ul><li>再打开另一个新的cmd无密码进入mysql，再修改密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h3 id="踩坑-2"><a href="#踩坑-2" class="headerlink" title="踩坑"></a>踩坑</h3><ul><li>在安全模式修改密码报错：<code>The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement</code></li></ul><h4 id="解决问题-1"><a href="#解决问题-1" class="headerlink" title="解决问题"></a>解决问题</h4><ul><li>先执行</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><ul><li>再改密码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/geeksoarsky/article/details/84113009" target="_blank" rel="noopener">CSDN——geekcloud</a><br><a href="https://www.cnblogs.com/dongzhuangdian/p/5620771.html" target="_blank" rel="noopener">博客园——小德cyj</a><br><a href="https://www.cnblogs.com/zenghongfei/p/13304279.html" target="_blank" rel="noopener">博客园——无泪人</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/13/Windows%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85Mysql/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【踩坑】Homebrew报错：Another active Homebrew</title>
      <link>https://feiju12138.github.io/2020/09/11/Homebrew%E6%8A%A5%E9%94%99%EF%BC%9AAnother-active-Homebrew/</link>
      <guid>https://feiju12138.github.io/2020/09/11/Homebrew%E6%8A%A5%E9%94%99%EF%BC%9AAnother-active-Homebrew/</guid>
      <pubDate>Fri, 11 Sep 2020 00:45:41 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Homebrew报错：&lt;code&gt;Another active Homebrew update process is already in progress.&lt;/code&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Homebrew报错：<code>Another active Homebrew update process is already in progress.</code></p><a id="more"></a><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li>手动终止了brew update相关命令</li></ul><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ul><li>删除锁文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/<span class="built_in">local</span>/var/homebrew/locks</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/MASILEJFOAISEGJIAE/article/details/85253919" target="_blank" rel="noopener">CSDN——w8ed</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/11/Homebrew%E6%8A%A5%E9%94%99%EF%BC%9AAnother-active-Homebrew/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Docker学习笔记</title>
      <link>https://feiju12138.github.io/2020/09/10/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/09/10/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Thu, 10 Sep 2020 04:03:32 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Docker 是一个开放源代码软件，是一个开放平台，用于开发应用、交付（shipping）应用、运行应用。 Docker允许用户将基础设施（Infrastructure）中的应用单独分割出来，形成更小的颗粒（容器），从而提高交付软件的速度。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Docker&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Docker 是一个开放源代码软件，是一个开放平台，用于开发应用、交付（shipping）应用、运行应用。 Docker允许用户将基础设施（Infrastructure）中的应用单独分割出来，形成更小的颗粒（容器），从而提高交付软件的速度。（<a href="https://zh.wikipedia.org/wiki/Docker" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install docker</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>在CentOS安装Docker</li></ul><h4 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h4 id="设置下载Docker的镜像源（可选）"><a href="#设置下载Docker的镜像源（可选）" class="headerlink" title="设置下载Docker的镜像源（可选）"></a>设置下载Docker的镜像源（可选）</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h4 id="安装Docker-1"><a href="#安装Docker-1" class="headerlink" title="安装Docker"></a>安装Docker</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-ce</span><br></pre></td></tr></table></figure><h2 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h2><h3 id="MacOS-1"><a href="#MacOS-1" class="headerlink" title="MacOS"></a>MacOS</h3><ul><li>直接在启动台打开Docker.app</li></ul><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h3 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><h2 id="中央仓库"><a href="#中央仓库" class="headerlink" title="中央仓库"></a>中央仓库</h2><ul><li>官方的中央仓库在国外（<a href="https://hub.docker.com" target="_blank" rel="noopener">https://hub.docker.com</a>）</li><li>国内有镜像网站（例如：<a href="http://hub.daocloud.io" target="_blank" rel="noopener">DaoCloud</a>）</li><li>公司有私服</li></ul><h3 id="配置私服"><a href="#配置私服" class="headerlink" title="配置私服"></a>配置私服</h3><h4 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h4><ul><li>编辑<code>daemon.json</code>配置文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><blockquote><p><code>&lt;ip&gt;</code>：私服ip<br><code>&lt;port&gt;</code>：私服端口号</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"registry-mirrors"</span>:[<span class="string">"https://registry.docker-cn.com"</span>],</span><br><span class="line">    <span class="string">"insecure-registries"</span>:[<span class="string">"&lt;ip&gt;:&lt;port&gt;"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重启两个服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a>镜像操作</h2><h3 id="拉取镜像到本地"><a href="#拉取镜像到本地" class="headerlink" title="拉取镜像到本地"></a>拉取镜像到本地</h3><blockquote><p><code>&lt;name&gt;</code>：镜像名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull &lt;name&gt;</span><br></pre></td></tr></table></figure><h4 id="指定版本"><a href="#指定版本" class="headerlink" title="指定版本"></a>指定版本</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull &lt;name&gt;:&lt;version&gt;</span><br></pre></td></tr></table></figure><h3 id="查看全部的镜像"><a href="#查看全部的镜像" class="headerlink" title="查看全部的镜像"></a>查看全部的镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h3 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h3><blockquote><p><code>&lt;image_id&gt;</code>：镜像标识（可以简写）</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &lt;image_id&gt;</span><br></pre></td></tr></table></figure><h3 id="镜像的导入导出（不规范）"><a href="#镜像的导入导出（不规范）" class="headerlink" title="镜像的导入导出（不规范）"></a>镜像的导入导出（不规范）</h3><h4 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h4><blockquote><p><code>&lt;src&gt;</code>：导出的路径<br><code>&lt;name&gt;</code>：导出后的文件名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o &lt;src&gt;/&lt;name&gt; &lt;image_id&gt;</span><br></pre></td></tr></table></figure><h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i &lt;src&gt;/&lt;name&gt;</span><br></pre></td></tr></table></figure><h5 id="修改导入后的空名称"><a href="#修改导入后的空名称" class="headerlink" title="修改导入后的空名称"></a>修改导入后的空名称</h5><ul><li>修改导入后默认的名称null</li></ul><blockquote><p><code>:&lt;version&gt;</code>：版本号（可选）</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag &lt;image_id&gt; &lt;name_new&gt;:&lt;version&gt;</span><br></pre></td></tr></table></figure><h2 id="容器的操作"><a href="#容器的操作" class="headerlink" title="容器的操作"></a>容器的操作</h2><h3 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h3><blockquote><p><code>&lt;name&gt;:&lt;version&gt;</code>：镜像名和版本号指定镜像<br><code>&lt;image_id&gt;</code>：通过镜像唯一标识指定镜像</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run &lt;name&gt;:&lt;version&gt;</span><br><span class="line"></span><br><span class="line">docker run &lt;image_id&gt;</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><blockquote><p><code>-d</code>：后台运行容器<br><code>-p</code>：为了映射当前宿主机的端口和容器的端口</p><blockquote><p><code>&lt;port_out&gt;</code>：宿主机端口<br><code>&lt;port_in&gt;</code>：容器端口</p></blockquote></blockquote><blockquote><p><code>--name</code>：指定容器名称</p><blockquote><p><code>&lt;name_in&gt;</code>：容器名称</p></blockquote></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p &lt;port_out&gt;:&lt;port_in&gt; --name &lt;name_in&gt; &lt;name&gt;:&lt;version&gt;</span><br><span class="line"></span><br><span class="line">docker run -d -p &lt;port_out&gt;:&lt;port_in&gt; --name &lt;name_in&gt; &lt;image_id&gt;</span><br></pre></td></tr></table></figure><h5 id="mysql在运行时指定初始密码"><a href="#mysql在运行时指定初始密码" class="headerlink" title="mysql在运行时指定初始密码"></a>mysql在运行时指定初始密码</h5><blockquote><p><code>-e</code>：指定初始密码<br><code>&lt;password&gt;</code>：初始密码</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p &lt;port_out&gt;:&lt;port_in&gt; --name &lt;name_in&gt; -e MYSQL_ROOT_PASSWORD=&lt;password&gt; &lt;image_id&gt;</span><br></pre></td></tr></table></figure><h3 id="查看正在进行的容器"><a href="#查看正在进行的容器" class="headerlink" title="查看正在进行的容器"></a>查看正在进行的容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><blockquote><p><code>-a</code>：查看所有容器，包括未运行的容器<br><code>-q</code>：只查看标识，不查看别的内容</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -aq ps</span><br></pre></td></tr></table></figure><h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><blockquote><p><code>&lt;con_id&gt;</code>：容器的唯一标识</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start &lt;con_id&gt;</span><br></pre></td></tr></table></figure><h3 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop &lt;con_id&gt;</span><br></pre></td></tr></table></figure><h4 id="停止全部容器"><a href="#停止全部容器" class="headerlink" title="停止全部容器"></a>停止全部容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -aq)</span><br></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><ul><li>删除容器之前要停止容器</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm &lt;con_id&gt;</span><br></pre></td></tr></table></figure><h4 id="删除全部容器"><a href="#删除全部容器" class="headerlink" title="删除全部容器"></a>删除全部容器</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><h3 id="进入到容器内部"><a href="#进入到容器内部" class="headerlink" title="进入到容器内部"></a>进入到容器内部</h3><ul><li>不推荐在容器内部进行关闭服务的操作</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it &lt;con_id&gt; bash</span><br></pre></td></tr></table></figure><h3 id="查看容器的日志"><a href="#查看容器的日志" class="headerlink" title="查看容器的日志"></a>查看容器的日志</h3><blockquote><p><code>-f</code>：滚动查看日志的最后几行</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f &lt;con_id&gt;</span><br></pre></td></tr></table></figure><h2 id="复制宿主机内容到容器内部"><a href="#复制宿主机内容到容器内部" class="headerlink" title="复制宿主机内容到容器内部"></a>复制宿主机内容到容器内部</h2><blockquote><p><code>&lt;file_old&gt;</code>：宿主机文件的路径及文件名<br><code>&lt;file_new&gt;</code>：容器内部文件想要存放的路径名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp &lt;file_old&gt; &lt;con_id&gt;:&lt;file_new&gt;</span><br></pre></td></tr></table></figure><h2 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h2><ul><li>将宿主机的一个目录映射到容器的一个目录中</li><li>可以在宿主机中操作目录中的内容，那么容器内部映射的文件，也会跟着一起改变</li></ul><h3 id="创建数据卷"><a href="#创建数据卷" class="headerlink" title="创建数据卷"></a>创建数据卷</h3><ul><li>创建数据卷后，宿主机会产生一个新目录，作为数据卷交换数据的目录</li></ul><p><code>/var/lib/docker/volumes/&lt;name&gt;/_data</code></p><blockquote><p><code>&lt;name&gt;</code>：数据卷名称</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="查看数据卷的详细信息"><a href="#查看数据卷的详细信息" class="headerlink" title="查看数据卷的详细信息"></a>查看数据卷的详细信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume inspect &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="查看全部数据卷"><a href="#查看全部数据卷" class="headerlink" title="查看全部数据卷"></a>查看全部数据卷</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume ls</span><br></pre></td></tr></table></figure><h3 id="删除数据卷"><a href="#删除数据卷" class="headerlink" title="删除数据卷"></a>删除数据卷</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume rm &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="映射数据卷"><a href="#映射数据卷" class="headerlink" title="映射数据卷"></a>映射数据卷</h3><ul><li>类似于挂载操作（将容器内部的指定目录映射到宿主机的指定目录）</li></ul><blockquote><p><code>-v</code>：指定映射数据卷的参数</p><blockquote><p><code>&lt;src_out&gt;</code>：定义一个数据卷在宿主机的存放路径及目录名（如果在这之前没有创建过数据卷，Docker会自动创建目录并将其作为数据卷映射的目录，缺点是不能将当前容器内部的数据同步出来。如果在这之前创建过数据卷，请指定路径为创建数据卷后的默认路径，优点是能将容器内部当前的数据同步出来。所以推荐先手动创建数据卷，再将路径指向新建数据卷后的默认位置）<br><code>&lt;src_in&gt;</code>：想要映射容器内部目录的路径</p></blockquote></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p &lt;port_out&gt;:&lt;port_in&gt; --name &lt;name_in&gt; -v &lt;src_old&gt;:&lt;src_in&gt; &lt;image_id&gt;</span><br></pre></td></tr></table></figure><h2 id="自定义镜像"><a href="#自定义镜像" class="headerlink" title="自定义镜像"></a>自定义镜像</h2><h3 id="创建一个Dockerfile文件"><a href="#创建一个Dockerfile文件" class="headerlink" title="创建一个Dockerfile文件"></a>创建一个Dockerfile文件</h3><ul><li>创建一个Dockerfile文件（无扩展名），并且指定自定义镜像信息</li></ul><h3 id="Dockerfile文件的参数"><a href="#Dockerfile文件的参数" class="headerlink" title="Dockerfile文件的参数"></a>Dockerfile文件的参数</h3><blockquote><p><code>from</code>：指定当前自定义镜像以来的环境<br><code>copy</code>：将相对路径下的内容复制到自定义镜像中<br><code>workdir</code>：声明镜像默认的工作目录<br><code>cmd</code>：需要执行的命令（在workdir下执行，cmd可以写多个但只以最后一个为准）</p></blockquote><ul><li>举例：自定义一个tomcat镜像并将自己写的项目部署到comcat中</li></ul><h3 id="编辑Dockerfile"><a href="#编辑Dockerfile" class="headerlink" title="编辑Dockerfile"></a>编辑Dockerfile</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from tomcat</span><br><span class="line">copy 项目名.war /usr/<span class="built_in">local</span>/tomcat/webapps</span><br></pre></td></tr></table></figure><h3 id="通过命令制作镜像"><a href="#通过命令制作镜像" class="headerlink" title="通过命令制作镜像"></a>通过命令制作镜像</h3><blockquote><p><code>&lt;name&gt;</code>：自定义的镜像名称，后面可以追加<code>:版本号</code><br><code>&lt;dockerfile&gt;</code>：Dockerfile文件存放的的路径</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t &lt;name&gt; &lt;dockerfile&gt;</span><br></pre></td></tr></table></figure><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2><p>Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application’s services. Then, using a single command, you create and start all the services from your configuration. To learn more about all the features of Compose see the list of features.（<a href="https://github.com/docker/compose" target="_blank" rel="noopener">Github</a>）</p><ul><li>通过docker-compose批量管理Docker容器</li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>添加执行权限</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x docker-compose</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><ul><li>配置文件要和<code>docker-compose</code>在同一目录下</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch docker-compose.yml</span><br></pre></td></tr></table></figure><h4 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><ul><li>同时管理Mysql和Tomcat的配置示例</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.1"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3306</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">UTC</span></span><br><span class="line">  <span class="attr">tomcat:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tomcat</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">tomcat</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">UTC</span></span><br></pre></td></tr></table></figure><h3 id="启动docker-compose管理的容器"><a href="#启动docker-compose管理的容器" class="headerlink" title="启动docker-compose管理的容器"></a>启动docker-compose管理的容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><h4 id="以后台启动"><a href="#以后台启动" class="headerlink" title="以后台启动"></a>以后台启动</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="关闭并删除docker-compose管理的容器"><a href="#关闭并删除docker-compose管理的容器" class="headerlink" title="关闭并删除docker-compose管理的容器"></a>关闭并删除docker-compose管理的容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><h3 id="开启docker-compose管理的容器"><a href="#开启docker-compose管理的容器" class="headerlink" title="开启docker-compose管理的容器"></a>开启docker-compose管理的容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose start</span><br></pre></td></tr></table></figure><h3 id="关闭docker-compose管理的容器"><a href="#关闭docker-compose管理的容器" class="headerlink" title="关闭docker-compose管理的容器"></a>关闭docker-compose管理的容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure><h3 id="重启docker-compose管理的容器"><a href="#重启docker-compose管理的容器" class="headerlink" title="重启docker-compose管理的容器"></a>重启docker-compose管理的容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><h3 id="查看docker-compose管理的容器"><a href="#查看docker-compose管理的容器" class="headerlink" title="查看docker-compose管理的容器"></a>查看docker-compose管理的容器</h3><blockquote><p><code>-a</code>：查看所有容器，包括未运行的容器<br><code>-q</code>：只查看标识，不查看别的内容</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose ps</span><br></pre></td></tr></table></figure><h3 id="查看docker-compose管理的容器日志"><a href="#查看docker-compose管理的容器日志" class="headerlink" title="查看docker-compose管理的容器日志"></a>查看docker-compose管理的容器日志</h3><blockquote><p><code>-f</code>：滚动查看</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose logs -f</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1sK4y1s7Cj" target="_blank" rel="noopener">哔哩哔哩——千锋Java学习营</a><br><a href="https://www.runoob.com/docker/docker-install-mysql.html" target="_blank" rel="noopener">菜鸟笔记</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/10/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【代码】找树问题</title>
      <link>https://feiju12138.github.io/2020/09/08/%E6%89%BE%E6%A0%91%E9%97%AE%E9%A2%98/</link>
      <guid>https://feiju12138.github.io/2020/09/08/%E6%89%BE%E6%A0%91%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Tue, 08 Sep 2020 06:33:13 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;小伙伴给我发来消息叫我帮他做一道编程题，于是我用最擅长的java解决了问题。&lt;br&gt;由于时间原因，只做了控制台打印的简单程序，没有做带UI界面的程序&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>小伙伴给我发来消息叫我帮他做一道编程题，于是我用最擅长的java解决了问题。<br>由于时间原因，只做了控制台打印的简单程序，没有做带UI界面的程序</p><a id="more"></a><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><img src="/images/20200908143313/01.png" alt="01.png"></p><h2 id="程序使用讲解"><a href="#程序使用讲解" class="headerlink" title="程序使用讲解"></a>程序使用讲解</h2><ul><li>通过输入坐标点判定是否最终能找到树，如果程序执行了999次也没找到树，就直接返回没找到</li><li>可以将列表比作数学中的平面直角坐标系，原点在左下位置，左下角坐标点为<code>(1,1)</code>，右上角坐标点为<code>(5,5)</code></li></ul><p><img src="/images/20200908143313/02.png" alt="02.png"></p><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个map用于存放所有坐标及其对应的内容</span></span><br><span class="line">    <span class="keyword">static</span> Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义初始化方法，将坐标赋值为map的key，将它表示的内容赋值为map的value，并把value打印到控制台</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">view</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为第一列赋值</span></span><br><span class="line">        map.put(<span class="string">"(1,1)"</span>, <span class="string">"4U"</span>);map.put(<span class="string">"(1,2)"</span>, <span class="string">"2R"</span>);map.put(<span class="string">"(1,3)"</span>, <span class="string">"2R"</span>);map.put(<span class="string">"(1,4)"</span>, <span class="string">"2D"</span>);map.put(<span class="string">"(1,5)"</span>, <span class="string">"2D"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为第二列赋值</span></span><br><span class="line">        map.put(<span class="string">"(2,1)"</span>, <span class="string">"3U"</span>);map.put(<span class="string">"(2,2)"</span>, <span class="string">"1U"</span>);map.put(<span class="string">"(2,3)"</span>, <span class="string">"2U"</span>);map.put(<span class="string">"(2,4)"</span>, <span class="string">"1R"</span>);map.put(<span class="string">"(2,5)"</span>, <span class="string">"2R"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为第三列赋值</span></span><br><span class="line">        map.put(<span class="string">"(3,1)"</span>, <span class="string">"2L"</span>);map.put(<span class="string">"(3,2)"</span>, <span class="string">"2R"</span>);map.put(<span class="string">"(3,3)"</span>, <span class="string">"0"</span>);map.put(<span class="string">"(3,4)"</span>, <span class="string">"2R"</span>);map.put(<span class="string">"(3,5)"</span>, <span class="string">"4D"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为第四列赋值</span></span><br><span class="line">        map.put(<span class="string">"(4,1)"</span>, <span class="string">"2L"</span>);map.put(<span class="string">"(4,2)"</span>, <span class="string">"2L"</span>);map.put(<span class="string">"(4,3)"</span>, <span class="string">"2D"</span>);map.put(<span class="string">"(4,4)"</span>, <span class="string">"3L"</span>);map.put(<span class="string">"(4,5)"</span>, <span class="string">"1D"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 为第五列赋值</span></span><br><span class="line">        map.put(<span class="string">"(5,1)"</span>, <span class="string">"4U"</span>);map.put(<span class="string">"(5,2)"</span>, <span class="string">"1U"</span>);map.put(<span class="string">"(5,3)"</span>, <span class="string">"1L"</span>);map.put(<span class="string">"(5,4)"</span>, <span class="string">"3D"</span>);map.put(<span class="string">"(5,5)"</span>, <span class="string">"2L"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将五行数据打印到控制台</span></span><br><span class="line">        System.out.println(map.get(<span class="string">"(1,5)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(2,5)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(3,5)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(4,5)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(5,5)"</span>));</span><br><span class="line">        System.out.println(map.get(<span class="string">"(1,4)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(2,4)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(3,4)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(4,4)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(5,4)"</span>));</span><br><span class="line">        System.out.println(map.get(<span class="string">"(1,3)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(2,3)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(3,3)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(4,3)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(5,3)"</span>));</span><br><span class="line">        System.out.println(map.get(<span class="string">"(1,2)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(2,2)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(3,2)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(4,2)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(5,2)"</span>));</span><br><span class="line">        System.out.println(map.get(<span class="string">"(1,1)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(2,1)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(3,1)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(4,1)"</span>)+<span class="string">"\t"</span>+map.get(<span class="string">"(5,1)"</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 程序无限循环</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 初始化</span></span><br><span class="line">            view();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 提示</span></span><br><span class="line">            System.out.println(<span class="string">"请指定起始坐标"</span>);</span><br><span class="line">            System.out.println(<span class="string">"示例：(1,2)"</span>);</span><br><span class="line">            System.out.print(<span class="string">"&gt; "</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 向控制台输入一个坐标</span></span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            String point = sc.next();</span><br><span class="line">            String begin = point;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置一个开关，当找到树，则改变开关为true</span></span><br><span class="line">            <span class="keyword">boolean</span> key = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行999次，如果还是找不到就跳出循环</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">999</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 打印经过的坐标点（方便调试）</span></span><br><span class="line">                System.out.println(<span class="string">"调试："</span>+point);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断当前坐标点是不是树</span></span><br><span class="line">                <span class="comment">// 如果是，改变开关状态并强制退出循环</span></span><br><span class="line">                <span class="keyword">if</span>(map.get(point).equals(<span class="string">"0"</span>)) &#123;</span><br><span class="line">                    key = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取当前坐标点的value，并拆分，分别表示下一次前进的次数和前进的方向</span></span><br><span class="line">                <span class="keyword">int</span> before = Integer.parseInt(map.get(point).charAt(<span class="number">0</span>)+<span class="string">""</span>);</span><br><span class="line">                String after = map.get(point).charAt(<span class="number">1</span>)+<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 根据次数和方向向前前进，前进后进行下一次循环</span></span><br><span class="line">                <span class="keyword">if</span> (after.equals(<span class="string">"U"</span>)) &#123;</span><br><span class="line">                        point = goUp(point,before);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (after.equals(<span class="string">"D"</span>)) &#123;</span><br><span class="line">                        point = goDown(point,before);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (after.equals(<span class="string">"L"</span>)) &#123;</span><br><span class="line">                        point = goLeft(point,before);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (after.equals(<span class="string">"R"</span>)) &#123;</span><br><span class="line">                        point = goRight(point,before);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 根据开关状态，将结果打印</span></span><br><span class="line">            System.out.println(<span class="string">"======"</span>);</span><br><span class="line">            <span class="keyword">if</span>(key) &#123;</span><br><span class="line">                System.out.println(<span class="string">"找树成功"</span>);</span><br><span class="line">                System.out.println(<span class="string">"当前起始值为："</span>+begin);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"找树失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"======"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 为了能看清结果再进行下一次程序执行，在此处做一个暂停的操作</span></span><br><span class="line">            System.out.println(<span class="string">"输入任意值继续..."</span>);</span><br><span class="line">            String p = sc.next();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 设定四种方法，功能分别是向上、向下、向左、向右移动</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">goUp</span><span class="params">(String c, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 拆分字符串，分别提取横坐标和纵坐标</span></span><br><span class="line">        <span class="keyword">int</span> row = Integer.parseInt(c.charAt(<span class="number">1</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">int</span> col = Integer.parseInt(c.charAt(<span class="number">3</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="comment">// 根据传过来的原坐标和前进的此处，重新定义新坐标并替换为原坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            col++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将横纵坐标重新定义为坐标格式返回给方法调用者</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"("</span>+row+<span class="string">","</span>+col+<span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">goDown</span><span class="params">(String c, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> row = Integer.parseInt(c.charAt(<span class="number">1</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">int</span> col = Integer.parseInt(c.charAt(<span class="number">3</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            col--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"("</span>+row+<span class="string">","</span>+col+<span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">goLeft</span><span class="params">(String c, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> row = Integer.parseInt(c.charAt(<span class="number">1</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">int</span> col = Integer.parseInt(c.charAt(<span class="number">3</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            row--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"("</span>+row+<span class="string">","</span>+col+<span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">goRight</span><span class="params">(String c, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> row = Integer.parseInt(c.charAt(<span class="number">1</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">int</span> col = Integer.parseInt(c.charAt(<span class="number">3</span>)+<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            row++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"("</span>+row+<span class="string">","</span>+col+<span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/08/%E6%89%BE%E6%A0%91%E9%97%AE%E9%A2%98/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
