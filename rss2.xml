<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Sat, 03 Oct 2020 04:30:23 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【笔记】Git学习笔记</title>
      <link>https://feiju12138.github.io/2020/10/03/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/10/03/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sat, 03 Oct 2020 03:17:49 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;git是一个分布式版本控制软件，最初由林纳斯·托瓦兹创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。应注意的是，这与GNU Interactive Tools（一个类似Norton Commander界面的文件管理器）不同。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>git是一个分布式版本控制软件，最初由林纳斯·托瓦兹创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。应注意的是，这与GNU Interactive Tools（一个类似Norton Commander界面的文件管理器）不同。（<a href="https://zh.wikipedia.org/wiki/Git" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="初始化当前目录"><a href="#初始化当前目录" class="headerlink" title="初始化当前目录"></a>初始化当前目录</h3><ul><li>初始化成功会在当前目录下自动创建一个存放git配置信息的名为<code>.git</code>的隐藏目录</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h3><ul><li>查看当前目录下的git状态，可以通过状态指引完成提交</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h3><ul><li>将指定文件从工作空间添加到本地索引</li></ul><blockquote><p><code>&lt;name&gt;</code>：文件名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;name&gt;</span><br></pre></td></tr></table></figure><h4 id="新增所有"><a href="#新增所有" class="headerlink" title="新增所有"></a>新增所有</h4><ul><li>将当前目录及其子目录下的所有文件从工作空间添加到本地索引</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><ul><li>将本地索引的所有文件提交到本地仓库</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure><ul><li><p>通过vim键入提交的备注</p></li><li><p><code>:wq</code>保存并退出完成备注</p></li></ul><h4 id="快速提交"><a href="#快速提交" class="headerlink" title="快速提交"></a>快速提交</h4><ul><li>不需要打开vim而快速提交</li></ul><blockquote><p><code>&lt;text&gt;</code>：需要提交的备注内容</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"&lt;text&gt;"</span></span><br></pre></td></tr></table></figure><h4 id="直接提交"><a href="#直接提交" class="headerlink" title="直接提交"></a>直接提交</h4><ul><li>将当前目录及其子目录下的所有文件从工作空间添加到本地索引，并直接进行提交</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -a</span><br></pre></td></tr></table></figure><h4 id="直接快速提交"><a href="#直接快速提交" class="headerlink" title="直接快速提交"></a>直接快速提交</h4><ul><li>将当前目录及其子目录下的所有文件从工作空间添加到本地索引，不需要打开vim，并直接进行快速提交</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -a -m <span class="string">"&lt;text&gt;"</span></span><br></pre></td></tr></table></figure><h3 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h3><ul><li>预先在远程创建仓库，并将本地仓库的所有文件推送到远程仓库（公共仓库或自己搭建的私有仓库）</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><h4 id="首次推送"><a href="#首次推送" class="headerlink" title="首次推送"></a>首次推送</h4><ul><li>指定当前git目录对应的远程仓库地址</li></ul><blockquote><p><code>&lt;url&gt;</code>：远程仓库地址</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;url&gt;</span><br></pre></td></tr></table></figure><ul><li>首次推送要指定主分支</li></ul><blockquote><p><code>master</code>：主分支名，可以自定义</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --<span class="built_in">set</span>-upstream origin master</span><br></pre></td></tr></table></figure><h3 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h3><ul><li>首次将所有文件从远程仓库直接克隆到本地仓库（当前目录下）</li></ul><blockquote><p><code>&lt;git&gt;</code>：远程仓库地址</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;git&gt;</span><br></pre></td></tr></table></figure><h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><ul><li>在已经克隆的情况下，从远程仓库拉取新文件到本地仓库</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><blockquote><p><code>&lt;name&gt;</code>：分支名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M &lt;name&gt;</span><br></pre></td></tr></table></figure><h2 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h2><h3 id="查看所有配置"><a href="#查看所有配置" class="headerlink" title="查看所有配置"></a>查看所有配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><h3 id="配置当前使用者的用户名"><a href="#配置当前使用者的用户名" class="headerlink" title="配置当前使用者的用户名"></a>配置当前使用者的用户名</h3><blockquote><p><code>&lt;username&gt;</code>：用户名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"&lt;username&gt;"</span></span><br></pre></td></tr></table></figure><h3 id="配置当前使用者的邮箱"><a href="#配置当前使用者的邮箱" class="headerlink" title="配置当前使用者的邮箱"></a>配置当前使用者的邮箱</h3><blockquote><p><code>&lt;email&gt;</code>：邮箱</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --clobal user.email <span class="string">"&lt;email&gt;"</span></span><br></pre></td></tr></table></figure><h3 id="重置用户名密码信息"><a href="#重置用户名密码信息" class="headerlink" title="重置用户名密码信息"></a>重置用户名密码信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --system --<span class="built_in">unset</span> credential.helper</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/03/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】JSON与JS互转</title>
      <link>https://feiju12138.github.io/2020/10/03/JSON%E4%B8%8EJS%E4%BA%92%E8%BD%AC/</link>
      <guid>https://feiju12138.github.io/2020/10/03/JSON%E4%B8%8EJS%E4%BA%92%E8%BD%AC/</guid>
      <pubDate>Sat, 03 Oct 2020 02:30:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;JSON与Javascript格式互转&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>JSON与Javascript格式互转</p><a id="more"></a><h2 id="互转"><a href="#互转" class="headerlink" title="互转"></a>互转</h2><h3 id="JSON对象转换为Javascript字符串"><a href="#JSON对象转换为Javascript字符串" class="headerlink" title="JSON对象转换为Javascript字符串"></a>JSON对象转换为Javascript字符串</h3><blockquote><p><code>&lt;json&gt;</code>：JSON对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> js = <span class="built_in">JSON</span>.parse(<span class="xml"><span class="tag">&lt;<span class="name">json</span>&gt;</span>);</span></span><br></pre></td></tr></table></figure><h3 id="Javascript字符串转换为JSON对象"><a href="#Javascript字符串转换为JSON对象" class="headerlink" title="Javascript字符串转换为JSON对象"></a>Javascript字符串转换为JSON对象</h3><blockquote><p><code>&lt;js&gt;</code>：JSON格式的JS字符串</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> json = <span class="built_in">JSON</span>.stringiry(<span class="xml"><span class="tag">&lt;<span class="name">js</span>&gt;</span>)</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/03/JSON%E4%B8%8EJS%E4%BA%92%E8%BD%AC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】IDEA普通java项目导入jar包</title>
      <link>https://feiju12138.github.io/2020/10/02/IDEA%E6%99%AE%E9%80%9Ajava%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5jar%E5%8C%85/</link>
      <guid>https://feiju12138.github.io/2020/10/02/IDEA%E6%99%AE%E9%80%9Ajava%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5jar%E5%8C%85/</guid>
      <pubDate>Fri, 02 Oct 2020 05:40:07 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;IDEA普通java项目导入jar包&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>IDEA普通java项目导入jar包</p><a id="more"></a><h2 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h2><ul><li>在项目根目录下新建名为<code>lib</code>的目录，并将需要导入的jar包复制到lib目录下</li></ul><p><img src="/images/20201002134007/01.png" alt="01.png"></p><ul><li><code>File</code>-&gt;<code>Project Structure</code>-&gt;<code>Modules</code>-&gt;选中项目-&gt;<code>Dependencies</code>-&gt;<code>+</code>-&gt;<code>JARs or directories</code></li></ul><p><img src="/images/20201002134007/02.png" alt="02.png"></p><ul><li>选中项目根目录中刚刚创建的lib目录</li></ul><p><img src="/images/20201002134007/03.png" alt="03.png"></p><ul><li><p><code>OK</code></p></li><li><p>此时jar包已经可以展开了，表示引入成功</p></li></ul><p><img src="/images/20201002134007/04.png" alt="04.png"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/02/IDEA%E6%99%AE%E9%80%9Ajava%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5jar%E5%8C%85/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【踩坑】jar中没有主清单属性</title>
      <link>https://feiju12138.github.io/2020/10/01/jar%E4%B8%AD%E6%B2%A1%E6%9C%89%E4%B8%BB%E6%B8%85%E5%8D%95%E5%B1%9E%E6%80%A7/</link>
      <guid>https://feiju12138.github.io/2020/10/01/jar%E4%B8%AD%E6%B2%A1%E6%9C%89%E4%B8%BB%E6%B8%85%E5%8D%95%E5%B1%9E%E6%80%A7/</guid>
      <pubDate>Thu, 01 Oct 2020 13:17:51 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;将打好的jar包通过命令行运行，报错：&lt;code&gt;...jar中没有主清单属性&lt;/code&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>将打好的jar包通过命令行运行，报错：<code>...jar中没有主清单属性</code></p><a id="more"></a><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li>工具打包的时候没有指定程序入口</li></ul><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ul><li><p>通过压缩工具打开.jar文件</p></li><li><p>在<code>/META-INF/MANIFEST.MF</code>文件内添加一行，用于指定程序入口</p></li></ul><blockquote><p><code>&lt;main&gt;</code>：包含主方法的类的全局限定名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Main-Class: &lt;main&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/xqnode/article/details/86628794" target="_blank" rel="noopener">CSDN——xqnode</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/01/jar%E4%B8%AD%E6%B2%A1%E6%9C%89%E4%B8%BB%E6%B8%85%E5%8D%95%E5%B1%9E%E6%80%A7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】SpringBoot项目配置前端页面</title>
      <link>https://feiju12138.github.io/2020/09/30/SpringBoot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2/</link>
      <guid>https://feiju12138.github.io/2020/09/30/SpringBoot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2/</guid>
      <pubDate>Wed, 30 Sep 2020 08:17:45 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目配置前端页面，需要引入&lt;code&gt;thymeleaf&lt;/code&gt;和&lt;code&gt;spring web&lt;/code&gt;依赖&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目配置前端页面，需要引入<code>thymeleaf</code>和<code>spring web</code>依赖</p><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单体架构</span></span><br><span class="line"><span class="meta">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前后端分离架构动态页面</span></span><br><span class="line"><span class="comment"># spring.thymeleaf.prefix=file:/src/main/resources/templates/</span></span><br><span class="line"><span class="comment"># spring.thymeleaf.prefix=file:///src/main/resources/templates/</span></span><br><span class="line"><span class="comment"># spring.thymeleaf.prefix=http://localhost/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前后端分离架构静态页面</span></span><br><span class="line"><span class="comment"># spring.mvc.static-path-pattern=</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/30/SpringBoot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
