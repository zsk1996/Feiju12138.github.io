<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Mon, 28 Sep 2020 11:22:44 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【骚操作】破解Chrome小恐龙游戏</title>
      <link>https://feiju12138.github.io/2020/09/28/%E7%A0%B4%E8%A7%A3Chrome%E5%B0%8F%E6%81%90%E9%BE%99%E6%B8%B8%E6%88%8F/</link>
      <guid>https://feiju12138.github.io/2020/09/28/%E7%A0%B4%E8%A7%A3Chrome%E5%B0%8F%E6%81%90%E9%BE%99%E6%B8%B8%E6%88%8F/</guid>
      <pubDate>Mon, 28 Sep 2020 11:17:13 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通过在Chrome控制台修改Javascript代码，破解小恐龙游戏（&lt;a href=&quot;chrome://dino/&quot;&gt;chrome://dino&lt;/a&gt;），实现无敌和加速&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通过在Chrome控制台修改Javascript代码，破解小恐龙游戏（<a href="chrome://dino/">chrome://dino</a>），实现无敌和加速</p><a id="more"></a><h2 id="无敌"><a href="#无敌" class="headerlink" title="无敌"></a>无敌</h2><ul><li>将内置的<code>gameOver</code>条件从原来的判定函数改为空函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runner.prototype.gameOver = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h2><ul><li>通过使用内置的<code>setSpeed()</code>函数修改速率</li></ul><blockquote><p><code>&lt;num&gt;</code>：速率值</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runner.instance_.setSpeed(<span class="xml"><span class="tag">&lt;<span class="name">num</span>&gt;</span>)</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://xiaozhizsk.baklib.com/16e5/25d7" target="_blank" rel="noopener">小志知识库</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/28/%E7%A0%B4%E8%A7%A3Chrome%E5%B0%8F%E6%81%90%E9%BE%99%E6%B8%B8%E6%88%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【代码】Node创建简单的Web服务器</title>
      <link>https://feiju12138.github.io/2020/09/24/Node%E5%88%9B%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <guid>https://feiju12138.github.io/2020/09/24/Node%E5%88%9B%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <pubDate>Thu, 24 Sep 2020 14:53:07 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;使用Nodejs，创建一个简单的Web服务器&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用Nodejs，创建一个简单的Web服务器</p><a id="more"></a><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><ul><li>创建<code>server.js</code>文件</li></ul><h3 id="正常访问"><a href="#正常访问" class="headerlink" title="正常访问"></a>正常访问</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="comment">// 创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app = http.createServer();</span><br><span class="line"><span class="comment">// 设置端口</span></span><br><span class="line">app.listen(<span class="number">80</span>);</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line">app.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取请求的URL和请求的方法</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.url, req.method);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 200，正常访问</span></span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"text/html;charset=utf-8"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 设置相应内容</span></span><br><span class="line">    res.write(<span class="string">""</span>);</span><br><span class="line">    <span class="comment">// 结束并发送响应</span></span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="异常访问"><a href="#异常访问" class="headerlink" title="异常访问"></a>异常访问</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="comment">// 创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app = http.createServer();</span><br><span class="line"><span class="comment">// 设置端口</span></span><br><span class="line">app.listen(<span class="number">80</span>);</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line">app.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取请求的URL和请求的方法</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.url, req.method);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 404，异常访问</span></span><br><span class="line">    res.writeHead(<span class="number">404</span>);</span><br><span class="line">    <span class="comment">// 设置相应内容</span></span><br><span class="line">    res.write(<span class="string">""</span>);</span><br><span class="line">    <span class="comment">// 结束并发送响应</span></span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="comment">// 创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app = http.createServer();</span><br><span class="line"><span class="comment">// 设置端口</span></span><br><span class="line">app.listen(<span class="number">80</span>);</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line">app.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取请求的URL和请求的方法</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.url, req.method);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 302，重定向</span></span><br><span class="line">    res.writeHead(<span class="number">302</span>, &#123;</span><br><span class="line">        Location: <span class="string">"https:feiju12138.github.io"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 结束并发送响应</span></span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node server.js</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/24/Node%E5%88%9B%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】IDEA快捷键</title>
      <link>https://feiju12138.github.io/2020/09/24/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <guid>https://feiju12138.github.io/2020/09/24/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <pubDate>Thu, 24 Sep 2020 14:32:30 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;IDEA快捷键&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>IDEA快捷键</p><a id="more"></a><h2 id="Windows-amp-Linux"><a href="#Windows-amp-Linux" class="headerlink" title="Windows &amp; Linux"></a>Windows &amp; Linux</h2><p><img src="/images/20200924223230/01.jpg" alt="01.jpg"></p><h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><p><img src="/images/20200924223230/02.jpg" alt="02.jpg"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/24/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Npm学习笔记</title>
      <link>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Wed, 23 Sep 2020 12:57:41 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;npm（全称 Node Package Manager，即“node包管理器”）是Node.js默认的、用JavaScript编写的软件包管理系统。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Npm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>npm（全称 Node Package Manager，即“node包管理器”）是Node.js默认的、用JavaScript编写的软件包管理系统。（<a href="https://zh.wikipedia.org/wiki/Npm" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="安装Npm"><a href="#安装Npm" class="headerlink" title="安装Npm"></a>安装Npm</h2><ul><li>安装Nodejs默认会预装Npm</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h2 id="模块位置"><a href="#模块位置" class="headerlink" title="模块位置"></a>模块位置</h2><h3 id="本地位置"><a href="#本地位置" class="headerlink" title="本地位置"></a>本地位置</h3><ul><li>在终端当前目录下会产生<code>node_modules</code>目录</li></ul><h3 id="全局位置"><a href="#全局位置" class="headerlink" title="全局位置"></a>全局位置</h3><ul><li>MacOS会在<code>/usr/local/lib/</code>目录下产生<code>node_modules</code>目录</li></ul><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><blockquote><p><code>&lt;package&gt;</code>：软件包名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package&gt;</span><br></pre></td></tr></table></figure><h3 id="全局操作"><a href="#全局操作" class="headerlink" title="全局操作"></a>全局操作</h3><blockquote><p><code>-g</code>：全局操作</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package&gt; -g</span><br></pre></td></tr></table></figure><h4 id="升级自身"><a href="#升级自身" class="headerlink" title="升级自身"></a>升级自身</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm -g</span><br></pre></td></tr></table></figure><h2 id="卸载模块"><a href="#卸载模块" class="headerlink" title="卸载模块"></a>卸载模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="查看已安装模块"><a href="#查看已安装模块" class="headerlink" title="查看已安装模块"></a>查看已安装模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm ls</span><br><span class="line">npm list</span><br></pre></td></tr></table></figure><h3 id="查看指定已安装模块"><a href="#查看指定已安装模块" class="headerlink" title="查看指定已安装模块"></a>查看指定已安装模块</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="查找模块"><a href="#查找模块" class="headerlink" title="查找模块"></a>查找模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm search &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="升级模块"><a href="#升级模块" class="headerlink" title="升级模块"></a>升级模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="清空本地缓存"><a href="#清空本地缓存" class="headerlink" title="清空本地缓存"></a>清空本地缓存</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clear</span><br></pre></td></tr></table></figure><h2 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="查看指定命令帮助"><a href="#查看指定命令帮助" class="headerlink" title="查看指定命令帮助"></a>查看指定命令帮助</h3><blockquote><p><code>&lt;command&gt;</code>：命令名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用淘宝镜像</h2><ul><li>国内使用淘宝镜像实现加速效果</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm</span><br><span class="line"></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="国内版Npm命令"><a href="#国内版Npm命令" class="headerlink" title="国内版Npm命令"></a>国内版Npm命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.runoob.com/nodejs/nodejs-npm.html" target="_blank" rel="noopener">菜鸟笔记</a><br><a href="https://blog.csdn.net/idomyway/article/details/85226579" target="_blank" rel="noopener">CSDN——idomyway</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】SpringBoot 发邮件</title>
      <link>https://feiju12138.github.io/2020/09/23/SpringBoot%E5%8F%91%E9%82%AE%E4%BB%B6/</link>
      <guid>https://feiju12138.github.io/2020/09/23/SpringBoot%E5%8F%91%E9%82%AE%E4%BB%B6/</guid>
      <pubDate>Wed, 23 Sep 2020 08:15:15 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目实现发邮件，案例通过QQ邮箱实现&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目实现发邮件，案例通过QQ邮箱实现</p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>导入依赖</li></ul><blockquote><p><code>Spring Web</code><br><code>Java Mail Sender</code></p></blockquote><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><ul><li>修改<code>application.properties</code>项目配置文件</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">80</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.mail.host</span>=<span class="string">smtp.qq.com</span></span><br><span class="line"><span class="comment">#改成自己的邮箱</span></span><br><span class="line"><span class="meta">spring.mail.username</span>=<span class="string">000000@qq.com</span></span><br><span class="line"><span class="comment">#邮箱的密码(QQ邮箱需要使用授权码)</span></span><br><span class="line"><span class="meta">spring.mail.password</span>=<span class="string">000000</span></span><br><span class="line"><span class="meta">spring.mail.default-encoding</span>=<span class="string">utf-8</span></span><br><span class="line"><span class="meta">spring.mail.properties.mail.smtp.auth</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.mail.properties.mail.smtp.starttls.enable</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.mail.properties.mail.smtp.starttls.required</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><ul><li>创建Controller做测试</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package com.cy.mail.pj;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.mail.SimpleMailMessage;</span><br><span class="line">import org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line">import java.io.StringWriter;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class MailController &#123;</span><br><span class="line"></span><br><span class="line">    //加上autowired之后，框架创建一个JavaMailSender，赋值给javaMailSender</span><br><span class="line">    @Autowired</span><br><span class="line">    JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    public void sendMail(String subject, String text) &#123;</span><br><span class="line">        //创建一封邮件</span><br><span class="line">        SimpleMailMessage mailMessage = new SimpleMailMessage();</span><br><span class="line">        //设置收件人</span><br><span class="line">        mailMessage.setTo(<span class="string">"000000@qq.com"</span>);</span><br><span class="line">        //设置发件人</span><br><span class="line">        mailMessage.setFrom(<span class="string">"000000@qq.com"</span>);</span><br><span class="line">        //设置标题</span><br><span class="line">        mailMessage.setSubject(subject);</span><br><span class="line">        //设置正文</span><br><span class="line">        mailMessage.setText(text);</span><br><span class="line">        //发送邮件</span><br><span class="line">        javaMailSender.send(mailMessage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 成功案例</span><br><span class="line">    @RequestMapping(<span class="string">"/send1"</span>)</span><br><span class="line">    public String <span class="function"><span class="title">send1</span></span>() &#123;</span><br><span class="line">        sendMail(<span class="string">"邮件标题"</span>, <span class="string">"邮件正文"</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"发送成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 失败案例</span><br><span class="line">    @RequestMapping(<span class="string">"/send2"</span>)</span><br><span class="line">    public String <span class="function"><span class="title">send2</span></span>() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            int n = 10 / 0;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            //异常信息打印到服务器中，程序员看不到</span><br><span class="line">            //e.printStackTrace();</span><br><span class="line">            //把异常信息转成字符串</span><br><span class="line">            StringWriter stingWriter = new StringWriter();</span><br><span class="line">            PrintWriter printWriter = new PrintWriter(stingWriter);</span><br><span class="line">            e.printStackTrace(printWriter);</span><br><span class="line">            String execeptionInfo = stingWriter.toString();</span><br><span class="line">            //<span class="built_in">return</span> execeptionInfo;</span><br><span class="line">            this.sendMail(<span class="string">"异常信息"</span>, execeptionInfo);</span><br><span class="line">            <span class="built_in">return</span> <span class="string">"发送失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"发送成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><ul><li>访问<code>http://localhost/send1</code>测试发送成功效果</li><li>访问<code>http://localhost/send2</code>测试发送失败效果</li></ul>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/23/SpringBoot%E5%8F%91%E9%82%AE%E4%BB%B6/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
