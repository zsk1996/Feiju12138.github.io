<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Wed, 02 Sep 2020 05:53:44 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【笔记】Lombok学习笔记</title>
      <link>https://feiju12138.github.io/2020/09/02/Lombok%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/09/02/Lombok%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Wed, 02 Sep 2020 04:32:34 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Project Lombok is a java library that automatically plugs into your editor and build tools, spicing up your java.&lt;br&gt;Never write another getter or equals method again, with one annotation your class has a fully featured builder, Automate your logging variables, and much more.（&lt;a href=&quot;https://projectlombok.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Project Lombok is a java library that automatically plugs into your editor and build tools, spicing up your java.<br>Never write another getter or equals method again, with one annotation your class has a fully featured builder, Automate your logging variables, and much more.（<a href="https://projectlombok.org" target="_blank" rel="noopener">官网</a>）</p><a id="more"></a><h2 id="项目引入Lombok"><a href="#项目引入Lombok" class="headerlink" title="项目引入Lombok"></a>项目引入Lombok</h2><ul><li>编辑pom.xml配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="安装Lombok插件"><a href="#安装Lombok插件" class="headerlink" title="安装Lombok插件"></a>安装Lombok插件</h2><ul><li><p>在SpringToolSuite4 For Mac安装Lombok插件</p></li><li><p>找到Lombok的jar包</p></li></ul><p><code>~/.m2/repository/org/projectlombok/lombok/1.18.12/lombok-1.18.12.jar</code></p><ul><li>运行jar包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar lombok-1.18.12.jar</span><br></pre></td></tr></table></figure><p><img src="/images/20200902123234/01.png" alt="01.png"></p><ul><li>默认会扫描到Eclipse但是扫描不到SpringToolSuite4，点<code>Spedify location</code>手动指定<code>SpringToolSuite4</code>安装根目录</li></ul><p>MacOS无法选中根目录，需要指定到<code>SpringToolSuite4.ini</code>配置文件</p><p><img src="/images/20200902123234/02.png" alt="02.png"></p><ul><li>选中需要安装插件的软件</li></ul><p><img src="/images/20200902123234/03.png" alt="03.png"></p><ul><li>安装完成</li></ul><h2 id="使用Lombok注解"><a href="#使用Lombok注解" class="headerlink" title="使用Lombok注解"></a>使用Lombok注解</h2><h3 id="编译时为POJO类自动生成set、get、toString、equals等方法"><a href="#编译时为POJO类自动生成set、get、toString、equals等方法" class="headerlink" title="编译时为POJO类自动生成set、get、toString、equals等方法"></a>编译时为POJO类自动生成set、get、toString、equals等方法</h3><ul><li>定义在类上</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br></pre></td></tr></table></figure><h3 id="编译时为POJO类自动生成get方法"><a href="#编译时为POJO类自动生成get方法" class="headerlink" title="编译时为POJO类自动生成get方法"></a>编译时为POJO类自动生成get方法</h3><ul><li>定义在类上，为类的所有属性添加get方法</li><li>定义在属性上，为指定属性添加get方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br></pre></td></tr></table></figure><h3 id="编译时为POJO类自动生成set方法"><a href="#编译时为POJO类自动生成set方法" class="headerlink" title="编译时为POJO类自动生成set方法"></a>编译时为POJO类自动生成set方法</h3><ul><li>定义在类上，为类的所有属性添加set方法</li><li>定义在属性上，为指定属性添加set方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Setter</span></span><br></pre></td></tr></table></figure><h3 id="编译时为POJO类自动生成toString方法"><a href="#编译时为POJO类自动生成toString方法" class="headerlink" title="编译时为POJO类自动生成toString方法"></a>编译时为POJO类自动生成toString方法</h3><ul><li>定义在类上</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ToString</span></span><br></pre></td></tr></table></figure><h3 id="编译时为POJO类自动生成全参构造方法方法"><a href="#编译时为POJO类自动生成全参构造方法方法" class="headerlink" title="编译时为POJO类自动生成全参构造方法方法"></a>编译时为POJO类自动生成全参构造方法方法</h3><ul><li>定义在类上</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AllArgsConstructor</span></span><br></pre></td></tr></table></figure><h3 id="编译时为POJO类自动生成无参构造方法"><a href="#编译时为POJO类自动生成无参构造方法" class="headerlink" title="编译时为POJO类自动生成无参构造方法"></a>编译时为POJO类自动生成无参构造方法</h3><ul><li>定义在类上</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NoArgsConstructor</span></span><br></pre></td></tr></table></figure><h3 id="自动创建名为log的Slf4j对象"><a href="#自动创建名为log的Slf4j对象" class="headerlink" title="自动创建名为log的Slf4j对象"></a>自动创建名为log的Slf4j对象</h3><ul><li>定义在类上</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/lsqingfeng/article/details/89842258" target="_blank" rel="noopener">CSDN——一缕82年的清风</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/02/Lombok%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】SpringBoot整合SpringMVC</title>
      <link>https://feiju12138.github.io/2020/08/31/SpringBoot%E6%95%B4%E5%90%88SpringMVC/</link>
      <guid>https://feiju12138.github.io/2020/08/31/SpringBoot%E6%95%B4%E5%90%88SpringMVC/</guid>
      <pubDate>Mon, 31 Aug 2020 08:47:42 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot整合SpringMVC&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot整合SpringMVC</p><a id="more"></a><h2 id="添加SpringMVC依赖"><a href="#添加SpringMVC依赖" class="headerlink" title="添加SpringMVC依赖"></a>添加SpringMVC依赖</h2><ul><li><p>编辑<code>pom.xml</code>配置文件</p></li><li><p>添加Web依赖（提供SpringMVC核心API，同时会嵌入一个Tomcat服务器）</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>添加Thymeleaf（提供了一个视图解析器对象以及数据绑定机制）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置SpringMVC核心对象"><a href="#配置SpringMVC核心对象" class="headerlink" title="配置SpringMVC核心对象"></a>配置SpringMVC核心对象</h2><ul><li><p>编辑<code>application.properties</code>配置文件</p></li><li><p>定义前缀和后缀</p></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/pages/</span></span><br><span class="line"><span class="meta">spring.thymeleaf.suffix</span>=<span class="string">.html</span></span><br></pre></td></tr></table></figure><ul><li>配置热部署（可选）</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><ul><li>配置项目访问路径，默认为<code>/</code>（可选）</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.servlet.context-path</span>=<span class="string">/</span></span><br></pre></td></tr></table></figure><ul><li>配置访问端口号，默认为<code>8080</code>（可选）</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">80</span></span><br></pre></td></tr></table></figure><h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><ul><li><p>静态页面书写位置：<code>/src/main/resources/static</code></p></li><li><p>动态页面书写位置：<code>/src/main/resources/templates/pages</code></p></li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/08/31/SpringBoot%E6%95%B4%E5%90%88SpringMVC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【代码】Jedis快速入门</title>
      <link>https://feiju12138.github.io/2020/08/30/Jedis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <guid>https://feiju12138.github.io/2020/08/30/Jedis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <pubDate>Sun, 30 Aug 2020 12:05:13 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通过Jedis使用Java代码操作Redis数据库&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通过Jedis使用Java代码操作Redis数据库</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.github.feiju12138;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJedis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 获取连接</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"localhost"</span>, <span class="number">6379</span>); <span class="comment">// 如果连接本机且端口号为默认，可以使用无参构造</span></span><br><span class="line">        jedis.auth(<span class="string">"123456"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 操作</span></span><br><span class="line">        jedis.set(<span class="string">"username"</span>, <span class="string">"zhangsan"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 关闭连接</span></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1uJ411k7wy" target="_blank" rel="noopener">哔哩哔哩——黎曼的猜想</a><br><a href="https://blog.csdn.net/Tomwildboar/article/details/89296322" target="_blank" rel="noopener">CSDN——小道仙</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/08/30/Jedis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Redis学习笔记</title>
      <link>https://feiju12138.github.io/2020/08/30/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/08/30/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sun, 30 Aug 2020 09:28:20 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Redis学习笔记&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Redis学习笔记</p><a id="more"></a><h2 id="数据类型及相关命令"><a href="#数据类型及相关命令" class="headerlink" title="数据类型及相关命令"></a>数据类型及相关命令</h2><ul><li>Redis存储的是key-value格式的数据，其中key是字符串，value有五种不同的数据类型</li></ul><h3 id="字符串类型String"><a href="#字符串类型String" class="headerlink" title="字符串类型String"></a>字符串类型String</h3><blockquote><p><code>&lt;key&gt;</code>：键<br><code>&lt;value&gt;</code>：值</p></blockquote><h4 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set &lt;key&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h4 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get &lt;key&gt;</span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del &lt;key&gt;</span><br></pre></td></tr></table></figure><h3 id="哈希类型hash"><a href="#哈希类型hash" class="headerlink" title="哈希类型hash"></a>哈希类型hash</h3><ul><li>map格式</li><li>可以存储键值对</li></ul><blockquote><p><code>&lt;field&gt;</code>：值中存储的键值对的键<br><code>&lt;value&gt;</code>：值中存储的键值对的值</p></blockquote><h4 id="存储-1"><a href="#存储-1" class="headerlink" title="存储"></a>存储</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hset &lt;key&gt; &lt;field&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h4 id="获取-1"><a href="#获取-1" class="headerlink" title="获取"></a>获取</h4><h5 id="获取指定酒店键值对"><a href="#获取指定酒店键值对" class="headerlink" title="获取指定酒店键值对"></a>获取指定酒店键值对</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hget &lt;key&gt; &lt;field&gt;</span><br></pre></td></tr></table></figure><h5 id="获取所有的键值对"><a href="#获取所有的键值对" class="headerlink" title="获取所有的键值对"></a>获取所有的键值对</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgetall &lt;key&gt;</span><br></pre></td></tr></table></figure><h4 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdel &lt;key&gt; &lt;field&gt;</span><br></pre></td></tr></table></figure><h3 id="列表类型list"><a href="#列表类型list" class="headerlink" title="列表类型list"></a>列表类型list</h3><ul><li>linkedlist格式</li><li>可以存储列表</li><li>允许重复元素</li><li>有序</li></ul><h4 id="存储-2"><a href="#存储-2" class="headerlink" title="存储"></a>存储</h4><h5 id="从列表头存储"><a href="#从列表头存储" class="headerlink" title="从列表头存储"></a>从列表头存储</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lpush &lt;key&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h5 id="从列表尾存储"><a href="#从列表尾存储" class="headerlink" title="从列表尾存储"></a>从列表尾存储</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpush &lt;key&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h4 id="获取-2"><a href="#获取-2" class="headerlink" title="获取"></a>获取</h4><blockquote><p><code>&lt;start&gt;</code>：指定获取的列表范围的起始值<br><code>&lt;end&gt;</code>：指定获取的列表范围的截止值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lrange &lt;key&gt; &lt;start&gt; &lt;end&gt;</span><br></pre></td></tr></table></figure><h5 id="获取所有"><a href="#获取所有" class="headerlink" title="获取所有"></a>获取所有</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lrange &lt;key&gt; 0 -1</span><br></pre></td></tr></table></figure><h4 id="删除-2"><a href="#删除-2" class="headerlink" title="删除"></a>删除</h4><h5 id="从列表头删除"><a href="#从列表头删除" class="headerlink" title="从列表头删除"></a>从列表头删除</h5><ul><li>返回删除的元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lpop &lt;key&gt;</span><br></pre></td></tr></table></figure><h5 id="从列表尾删除"><a href="#从列表尾删除" class="headerlink" title="从列表尾删除"></a>从列表尾删除</h5><ul><li>返回删除的元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpop &lt;key&gt;</span><br></pre></td></tr></table></figure><h3 id="集合类型set"><a href="#集合类型set" class="headerlink" title="集合类型set"></a>集合类型set</h3><ul><li>可以存储列表</li><li>不允许重复元素</li><li>无序</li></ul><h4 id="存储-3"><a href="#存储-3" class="headerlink" title="存储"></a>存储</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sadd &lt;key&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h4 id="获取-3"><a href="#获取-3" class="headerlink" title="获取"></a>获取</h4><ul><li>获取set集合中所有元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smembers &lt;key&gt;</span><br></pre></td></tr></table></figure><h4 id="删除-3"><a href="#删除-3" class="headerlink" title="删除"></a>删除</h4><ul><li>删除set集合中指定key的元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">srem &lt;key&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h3 id="有序集合类型sortedset"><a href="#有序集合类型sortedset" class="headerlink" title="有序集合类型sortedset"></a>有序集合类型sortedset</h3><ul><li>可以存储列表</li><li>不允许重复元素</li><li>有序</li></ul><blockquote><p><code>&lt;score&gt;</code>：分数，将来会根据给定的分数排序</p></blockquote><h4 id="存储-4"><a href="#存储-4" class="headerlink" title="存储"></a>存储</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zadd &lt;key&gt; &lt;score&gt; &lt;value&gt;</span><br></pre></td></tr></table></figure><h4 id="获取-4"><a href="#获取-4" class="headerlink" title="获取"></a>获取</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zrange &lt;key&gt; &lt;start&gt; &lt;end&gt;</span><br></pre></td></tr></table></figure><h5 id="同时获取分数"><a href="#同时获取分数" class="headerlink" title="同时获取分数"></a>同时获取分数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zrange &lt;key&gt; &lt;start&gt; &lt;end&gt; withscore</span><br></pre></td></tr></table></figure><h4 id="删除-4"><a href="#删除-4" class="headerlink" title="删除"></a>删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zrem key value</span><br></pre></td></tr></table></figure><h2 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h2><h3 id="查看所有的键"><a href="#查看所有的键" class="headerlink" title="查看所有的键"></a>查看所有的键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keys *</span><br></pre></td></tr></table></figure><h3 id="查看指定键的数据类型"><a href="#查看指定键的数据类型" class="headerlink" title="查看指定键的数据类型"></a>查看指定键的数据类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type &lt;key&gt;</span><br></pre></td></tr></table></figure><h3 id="删除指定的键值对"><a href="#删除指定的键值对" class="headerlink" title="删除指定的键值对"></a>删除指定的键值对</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del &lt;key&gt;</span><br></pre></td></tr></table></figure><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><ul><li>Redis是一个内存数据库，当Redis服务器重启，或电脑重启，数据会丢失，我们可以将Redis内存中的数据持久化保存到硬盘的文件中</li></ul><h3 id="持久化机制"><a href="#持久化机制" class="headerlink" title="持久化机制"></a>持久化机制</h3><h4 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h4><ul><li><p>默认方式，不需要配置</p></li><li><p>在一定的间隔时间，检测key的变化情况，然后持久化数据</p></li><li><p>修改<code>redis.conf</code>配置文件第217、218、219行</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 900秒后，至少有1个key发生改变，就持久化一次</span><br><span class="line">save 900 1</span><br><span class="line"></span><br><span class="line"># 300秒后，至少有10个key发生改变，就持久化一次</span><br><span class="line">save 300 10</span><br><span class="line"></span><br><span class="line"># 60秒后，至少有1万个key发生改变，就持久化一次</span><br><span class="line">save 60 10000</span><br></pre></td></tr></table></figure><h4 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h4><ul><li><p>日志的记录方式</p></li><li><p>可以记录每一条命令的操作，可以每一次命令操作后，持久化数据</p></li><li><p>修改<code>redis.conf</code>配置文件第698行，<code>no</code>改为<code>yes</code></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><ul><li>修改<code>redis.conf</code>配置文件第727、728、729行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 每一次操作都进行一次持久化</span><br><span class="line"># appendfsync always</span><br><span class="line"></span><br><span class="line"># 每隔一秒进行一次持久化</span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"># 不进行持久化</span><br><span class="line"># appendfsync no</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1uJ411k7wy" target="_blank" rel="noopener">哔哩哔哩——黎曼的猜想</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/08/30/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】SpringBoot整合Mybatis框架</title>
      <link>https://feiju12138.github.io/2020/08/29/SpringBoot%E6%95%B4%E5%90%88Mybatis%E6%A1%86%E6%9E%B6/</link>
      <guid>https://feiju12138.github.io/2020/08/29/SpringBoot%E6%95%B4%E5%90%88Mybatis%E6%A1%86%E6%9E%B6/</guid>
      <pubDate>Sat, 29 Aug 2020 02:58:58 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot整合Mybatis框架&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot整合Mybatis框架</p><a id="more"></a><h2 id="在pom-xml添加依赖"><a href="#在pom-xml添加依赖" class="headerlink" title="在pom.xml添加依赖"></a>在pom.xml添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="SpringBoot配置"><a href="#SpringBoot配置" class="headerlink" title="SpringBoot配置"></a>SpringBoot配置</h2><ul><li>编辑<code>application.properties</code>配置文件</li><li>配置Mybatis的Mapper文件位置</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis.mapper-locations</span>=<span class="string">classpath:/mapper/*/*.xml</span></span><br></pre></td></tr></table></figure><h2 id="注解方式"><a href="#注解方式" class="headerlink" title="注解方式"></a>注解方式</h2><ul><li>删除指定一条数据实例</li></ul><h3 id="Dao层定义接口"><a href="#Dao层定义接口" class="headerlink" title="Dao层定义接口"></a>Dao层定义接口</h3><ul><li>实现删除业务示例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodsDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在Mybatis中假如SQL映射语句比较简单，可以直接在dao方法上以注解方式进行定义</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"DELETE FROM tb_goods WHERE id=#&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDaoTests</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关联数据层接口，并由Spring为其进行值的注入</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsDao goodsDao;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String row = goodsDao.deleteById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"影响的行数："</span>+row);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xml方式"><a href="#xml方式" class="headerlink" title="xml方式"></a>xml方式</h2><ul><li>删除指定多条记录示例</li></ul><h3 id="定义Mapper文件"><a href="#定义Mapper文件" class="headerlink" title="定义Mapper文件"></a>定义Mapper文件</h3><ul><li>在<code>/src/main/resources/mapper/goods</code>新建<code>Goods.Mapper.xml</code>SQL映射文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.cy.pj.goods.dao.GoodsDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteObjects"</span>&gt;</span></span><br><span class="line">        delete from tb_goods where id in <span class="comment">&lt;!-- (1,2,3,4,5) --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">item</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置Mapper文件"><a href="#配置Mapper文件" class="headerlink" title="配置Mapper文件"></a>配置Mapper文件</h3><ul><li>修改<code>application.properties</code>文件</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis.mapper-locations</span>=<span class="string">classpath:mapper/*/*.xml</span></span><br></pre></td></tr></table></figure><h3 id="Dao层定义接口-1"><a href="#Dao层定义接口-1" class="headerlink" title="Dao层定义接口"></a>Dao层定义接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodsDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">deleteObjects</span><span class="params">(@Param(<span class="string">"ids"</span>)</span>Integer... ids)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试类-1"><a href="#测试类-1" class="headerlink" title="测试类"></a>测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDaoTests</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关联数据层接口，并由Spring为其进行值的注入</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsDao goodsDao;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteObjects</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> row = goodsDao.deleteObjects(<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="string">"影响的行数："</span>+row);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/08/29/SpringBoot%E6%95%B4%E5%90%88Mybatis%E6%A1%86%E6%9E%B6/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
