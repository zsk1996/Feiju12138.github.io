<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Sat, 03 Oct 2020 02:34:36 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【笔记】JSON与JS互转</title>
      <link>https://feiju12138.github.io/2020/10/03/JSON%E4%B8%8EJS%E4%BA%92%E8%BD%AC/</link>
      <guid>https://feiju12138.github.io/2020/10/03/JSON%E4%B8%8EJS%E4%BA%92%E8%BD%AC/</guid>
      <pubDate>Sat, 03 Oct 2020 02:30:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;JSON与Javascript格式互转&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>JSON与Javascript格式互转</p><a id="more"></a><h2 id="互转"><a href="#互转" class="headerlink" title="互转"></a>互转</h2><h3 id="JSON转换为Javascript对象"><a href="#JSON转换为Javascript对象" class="headerlink" title="JSON转换为Javascript对象"></a>JSON转换为Javascript对象</h3><blockquote><p><code>&lt;json&gt;</code>：JSON对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> js = <span class="built_in">JSON</span>.parse(<span class="xml"><span class="tag">&lt;<span class="name">json</span>&gt;</span>);</span></span><br></pre></td></tr></table></figure><h3 id="Javascript对象转换为JSON"><a href="#Javascript对象转换为JSON" class="headerlink" title="Javascript对象转换为JSON"></a>Javascript对象转换为JSON</h3><blockquote><p><code>&lt;js&gt;</code>：JSON格式的JS字符串</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> json = <span class="built_in">JSON</span>.stringiry(<span class="xml"><span class="tag">&lt;<span class="name">js</span>&gt;</span>)</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/03/JSON%E4%B8%8EJS%E4%BA%92%E8%BD%AC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】IDEA普通java项目导入jar包</title>
      <link>https://feiju12138.github.io/2020/10/02/IDEA%E6%99%AE%E9%80%9Ajava%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5jar%E5%8C%85/</link>
      <guid>https://feiju12138.github.io/2020/10/02/IDEA%E6%99%AE%E9%80%9Ajava%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5jar%E5%8C%85/</guid>
      <pubDate>Fri, 02 Oct 2020 05:40:07 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;IDEA普通java项目导入jar包&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>IDEA普通java项目导入jar包</p><a id="more"></a><h2 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h2><ul><li>在项目根目录下新建名为<code>lib</code>的目录，并将需要导入的jar包复制到lib目录下</li></ul><p><img src="/images/20201002134007/01.png" alt="01.png"></p><ul><li><code>File</code>-&gt;<code>Project Structure</code>-&gt;<code>Modules</code>-&gt;选中项目-&gt;<code>Dependencies</code>-&gt;<code>+</code>-&gt;<code>JARs or directories</code></li></ul><p><img src="/images/20201002134007/02.png" alt="02.png"></p><ul><li>选中项目根目录中刚刚创建的lib目录</li></ul><p><img src="/images/20201002134007/03.png" alt="03.png"></p><ul><li><p><code>OK</code></p></li><li><p>此时jar包已经可以展开了，表示引入成功</p></li></ul><p><img src="/images/20201002134007/04.png" alt="04.png"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/02/IDEA%E6%99%AE%E9%80%9Ajava%E9%A1%B9%E7%9B%AE%E5%AF%BC%E5%85%A5jar%E5%8C%85/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【踩坑】jar中没有主清单属性</title>
      <link>https://feiju12138.github.io/2020/10/01/jar%E4%B8%AD%E6%B2%A1%E6%9C%89%E4%B8%BB%E6%B8%85%E5%8D%95%E5%B1%9E%E6%80%A7/</link>
      <guid>https://feiju12138.github.io/2020/10/01/jar%E4%B8%AD%E6%B2%A1%E6%9C%89%E4%B8%BB%E6%B8%85%E5%8D%95%E5%B1%9E%E6%80%A7/</guid>
      <pubDate>Thu, 01 Oct 2020 13:17:51 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;将打好的jar包通过命令行运行，报错：&lt;code&gt;...jar中没有主清单属性&lt;/code&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>将打好的jar包通过命令行运行，报错：<code>...jar中没有主清单属性</code></p><a id="more"></a><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li>工具打包的时候没有指定程序入口</li></ul><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ul><li><p>通过压缩工具打开.jar文件</p></li><li><p>在<code>/META-INF/MANIFEST.MF</code>文件内添加一行，用于指定程序入口</p></li></ul><blockquote><p><code>&lt;main&gt;</code>：包含主方法的类的全局限定名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Main-Class: &lt;main&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/xqnode/article/details/86628794" target="_blank" rel="noopener">CSDN——xqnode</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/01/jar%E4%B8%AD%E6%B2%A1%E6%9C%89%E4%B8%BB%E6%B8%85%E5%8D%95%E5%B1%9E%E6%80%A7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】SpringBoot项目配置前端页面</title>
      <link>https://feiju12138.github.io/2020/09/30/SpringBoot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2/</link>
      <guid>https://feiju12138.github.io/2020/09/30/SpringBoot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2/</guid>
      <pubDate>Wed, 30 Sep 2020 08:17:45 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目配置前端页面，需要引入&lt;code&gt;thymeleaf&lt;/code&gt;和&lt;code&gt;spring web&lt;/code&gt;依赖&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目配置前端页面，需要引入<code>thymeleaf</code>和<code>spring web</code>依赖</p><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单体架构</span></span><br><span class="line"><span class="meta">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前后端分离架构动态页面</span></span><br><span class="line"><span class="comment"># spring.thymeleaf.prefix=file:/src/main/resources/templates/</span></span><br><span class="line"><span class="comment"># spring.thymeleaf.prefix=file:///src/main/resources/templates/</span></span><br><span class="line"><span class="comment"># spring.thymeleaf.prefix=http://localhost/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前后端分离架构静态页面</span></span><br><span class="line"><span class="comment"># spring.mvc.static-path-pattern=</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/30/SpringBoot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【代码】通过ModelAndView对象将数据返回到客户端</title>
      <link>https://feiju12138.github.io/2020/09/30/%E9%80%9A%E8%BF%87ModelAndView%E5%AF%B9%E8%B1%A1%E5%B0%86%E6%95%B0%E6%8D%AE%E8%BF%94%E5%9B%9E%E5%88%B0%E5%AE%A2%E6%88%B7%E7%AB%AF/</link>
      <guid>https://feiju12138.github.io/2020/09/30/%E9%80%9A%E8%BF%87ModelAndView%E5%AF%B9%E8%B1%A1%E5%B0%86%E6%95%B0%E6%8D%AE%E8%BF%94%E5%9B%9E%E5%88%B0%E5%AE%A2%E6%88%B7%E7%AB%AF/</guid>
      <pubDate>Wed, 30 Sep 2020 08:09:08 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目中Controller层，通过ModelAndView对象将数据返回到客户端&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目中Controller层，通过ModelAndView对象将数据返回到客户端</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>返回值会交给DispatcherServletd对象进行处理</li><li>DispatcherServlet对象会调用viewresolver对结果进行解析</li><li>基于viewresolver找到对应的view页面（prefix+viewname+suffix）</li><li>将model中的数据填充到view页面上</li><li>返回一个带有model数据的页面给DispatcherServlet</li><li>DispatcherServlet将带有model数据的页面响应到客户端</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">do</span><span class="params">()</span> </span>&#123;<span class="comment">// 此对象由DispatcherServlet对象通过反射调用</span></span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">    modelAndView.setViewName(<span class="string">"default"</span>);</span><br><span class="line">    modelAndView.addObject(<span class="string">"username"</span>,<span class="string">"chenzishu"</span>);</span><br><span class="line">    modelAndView.addObject(<span class="string">"state"</span>,<span class="string">"yajiankang"</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/30/%E9%80%9A%E8%BF%87ModelAndView%E5%AF%B9%E8%B1%A1%E5%B0%86%E6%95%B0%E6%8D%AE%E8%BF%94%E5%9B%9E%E5%88%B0%E5%AE%A2%E6%88%B7%E7%AB%AF/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
