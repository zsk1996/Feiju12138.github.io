<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Tue, 14 Jul 2020 09:20:54 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【笔记】Terminal 查看当前ip地址</title>
      <link>https://feiju12138.github.io/2020/07/14/Terminal%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8Dip%E5%9C%B0%E5%9D%80/</link>
      <guid>https://feiju12138.github.io/2020/07/14/Terminal%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8Dip%E5%9C%B0%E5%9D%80/</guid>
      <pubDate>Tue, 14 Jul 2020 09:17:22 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Terminal 查看当前ip地址&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Terminal 查看当前ip地址</p><a id="more"></a><h2 id="查看ip地址"><a href="#查看ip地址" class="headerlink" title="查看ip地址"></a>查看ip地址</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://checkip.amazonaws.com/</span><br></pre></td></tr></table></figure><h3 id="指定代理"><a href="#指定代理" class="headerlink" title="指定代理"></a>指定代理</h3><blockquote><p><code>&lt;ip&gt;</code>：代理地址<br><code>&lt;port&gt;</code>：代理端口</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --socks5 &lt;ip&gt;:&lt;port&gt; http://checkip.amazonaws.com/</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://qastack.cn/ubuntu/499995/how-to-change-the-ip-address-which-is-given-by-tor-using-the-terminal" target="_blank" rel="noopener">QAStack——</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/14/Terminal%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8Dip%E5%9C%B0%E5%9D%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Terminal 配置网络代理</title>
      <link>https://feiju12138.github.io/2020/07/14/Terminal%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/</link>
      <guid>https://feiju12138.github.io/2020/07/14/Terminal%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/</guid>
      <pubDate>Tue, 14 Jul 2020 08:59:16 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在终端配置网络代理。&lt;br&gt;临时性的，关闭终端后失效。&lt;br&gt;如果想要永久性的，可以将配置信息添加到终端配置文件。&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在终端配置网络代理。<br>临时性的，关闭终端后失效。<br>如果想要永久性的，可以将配置信息添加到终端配置文件。</p><a id="more"></a><h2 id="HTTP代理"><a href="#HTTP代理" class="headerlink" title="HTTP代理"></a>HTTP代理</h2><ul><li>配置HTTP及HTTPS代理</li></ul><blockquote><p><code>&lt;ip&gt;</code>：代理地址<br><code>&lt;port&gt;</code>：代理端口号</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://&lt;ip&gt;:&lt;port&gt;;</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://&lt;ip&gt;:&lt;port&gt;;</span><br></pre></td></tr></table></figure><h2 id="SOCKS代理"><a href="#SOCKS代理" class="headerlink" title="SOCKS代理"></a>SOCKS代理</h2><ul><li>配置SOCKS5代理</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=socks5://&lt;ip&gt;:&lt;port&gt;;</span><br></pre></td></tr></table></figure><h2 id="需要登录的代理"><a href="#需要登录的代理" class="headerlink" title="需要登录的代理"></a>需要登录的代理</h2><blockquote><p><code>&lt;username&gt;</code>：用户名<br><code>&lt;password&gt;</code>：密码</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http_proxy=http://&lt;username&gt;:&lt;password&gt;@&lt;ip&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.fazero.me/2015/09/15/让终端走代理的几种方法/" target="_blank" rel="noopener">fazero的博客</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/14/Terminal%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】接口</title>
      <link>https://feiju12138.github.io/2020/07/14/%E6%8E%A5%E5%8F%A3/</link>
      <guid>https://feiju12138.github.io/2020/07/14/%E6%8E%A5%E5%8F%A3/</guid>
      <pubDate>Tue, 14 Jul 2020 02:34:01 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Java OOP 接口学习笔记&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java OOP 接口学习笔记</p><a id="more"></a><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>接口中都是抽象方法</li><li>通过interface关键字创建接口</li><li>通过implements让子类来实现</li><li>可以理解成，接口是一个特殊的抽象类</li><li>接口突破了java单继承的局限性</li><li>接口和类之间可以多实现，接口和接口之间可以多继承</li><li>接口是对外暴露的规则，是一套开发规范</li><li>接口图报了程序的功能扩展，降低了耦合性</li></ul><h2 id="jdk1-8新特性"><a href="#jdk1-8新特性" class="headerlink" title="jdk1.8新特性"></a>jdk1.8新特性</h2><ul><li>在jdk1.8里允许接口中出现普通方法，要求被static或default修饰</li></ul><h2 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h2><ul><li>接口为方法的编写提供了简写方式，会自动拼接abstract和public</li><li>接口中的变量，会自动拼接public static final，把变量变成常</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><blockquote><p><code>&lt;name&gt;</code>：接口名<br><code>&lt;return&gt;</code>：方法返回值类型<br><code>&lt;method&gt;</code>：方法名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> &lt;<span class="title">name</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> &lt;<span class="keyword">return</span>&gt; &lt;method&gt;();</span><br><span class="line">    <span class="keyword">public</span> &lt;<span class="keyword">return</span>&gt; &lt;method&gt;();</span><br><span class="line">    <span class="keyword">abstract</span> &lt;<span class="keyword">return</span>&gt; &lt;method&gt;();</span><br><span class="line">    &lt;<span class="keyword">return</span>&gt; &lt;method&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> &lt;<span class="title">name</span>&gt;<span class="title">Impl</span> <span class="keyword">implements</span> &lt;<span class="title">name</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;<span class="keyword">return</span>&gt; &lt;method&gt;() &#123;</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/14/%E6%8E%A5%E5%8F%A3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】抽象类</title>
      <link>https://feiju12138.github.io/2020/07/13/%E6%8A%BD%E8%B1%A1%E7%B1%BB/</link>
      <guid>https://feiju12138.github.io/2020/07/13/%E6%8A%BD%E8%B1%A1%E7%B1%BB/</guid>
      <pubDate>Mon, 13 Jul 2020 03:33:45 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Java OOP 抽象类学习笔记&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java OOP 抽象类学习笔记</p><a id="more"></a><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ul><li>通过abstract关键字</li><li>可以修饰类或方法</li><li>抽象类中可以没有抽象方法</li><li>如果有抽象方法，那么该类必定为一个抽象类</li><li>子类继承了抽象类以后，要么还是一个抽象类，要么把所有的抽象方法都重写</li><li>多用于多态中</li><li>抽象类不可以被实例化</li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/13/%E6%8A%BD%E8%B1%A1%E7%B1%BB/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】多态</title>
      <link>https://feiju12138.github.io/2020/07/11/%E5%A4%9A%E6%80%81/</link>
      <guid>https://feiju12138.github.io/2020/07/11/%E5%A4%9A%E6%80%81/</guid>
      <pubDate>Sat, 11 Jul 2020 06:49:28 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Java OOP 多态学习笔记&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java OOP 多态学习笔记</p><a id="more"></a><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><ul><li>发生继承关系</li><li>发生方法重写</li></ul><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>父类引用指向子类对象</li><li>编译看左边，运行看右边</li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/11/%E5%A4%9A%E6%80%81/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
