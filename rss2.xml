<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Wed, 27 May 2020 04:32:34 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【代码】MD5加密</title>
      <link>https://feiju12138.github.io/2020/05/27/MD5%E5%8A%A0%E5%AF%86/</link>
      <guid>https://feiju12138.github.io/2020/05/27/MD5%E5%8A%A0%E5%AF%86/</guid>
      <pubDate>Wed, 27 May 2020 04:22:57 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Java实现MD5加密字符串&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java实现MD5加密字符串</p><a id="more"></a><h2 id="MD5加密"><a href="#MD5加密" class="headerlink" title="MD5加密"></a>MD5加密</h2><blockquote><p><code>&lt;pwd&gt;</code>：要转换的字符串</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.github.feiju12138</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//创建加密计算器</span></span><br><span class="line">        MessageDigest md5 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            md5 = MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//加密</span></span><br><span class="line">        md5.update(<span class="string">"&lt;pwd&gt;"</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换输出</span></span><br><span class="line">        System.out.println(<span class="keyword">new</span> BigInteger(<span class="number">1</span>, md5.digest()).toString(<span class="number">16</span>));</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/27/MD5%E5%8A%A0%E5%AF%86/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Ajax学习笔记</title>
      <link>https://feiju12138.github.io/2020/05/25/Ajax%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/05/25/Ajax%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Mon, 25 May 2020 08:03:45 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;AJAX即“Asynchronous JavaScript and XML”（异步的JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术。Ajax的概念由杰西·詹姆士·贾瑞特所提出。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/AJAX&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>AJAX即“Asynchronous JavaScript and XML”（异步的JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术。Ajax的概念由杰西·詹姆士·贾瑞特所提出。（<a href="https://zh.wikipedia.org/wiki/AJAX" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="基本实现步骤"><a href="#基本实现步骤" class="headerlink" title="基本实现步骤"></a>基本实现步骤</h2><ul><li>代码写在JavaScript代码域内</li></ul><h3 id="创建XMLHTTPRequest对象"><a href="#创建XMLHTTPRequest对象" class="headerlink" title="创建XMLHTTPRequest对象"></a>创建XMLHTTPRequest对象</h3><ul><li>创建一个函数，用于创建对象并解决浏览器兼容问题</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createXmlHttpRequest</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 针对谷歌、火狐等主流浏览器</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 针对IE5、IE6浏览器</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 其他不支持Ajax的浏览器</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">"您的浏览器不支持Ajax，请更换浏览器"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = createXmlHttpRequest();</span><br></pre></td></tr></table></figure><h3 id="准备发送请求"><a href="#准备发送请求" class="headerlink" title="准备发送请求"></a>准备发送请求</h3><ul><li>第一个参数是请求类型</li><li>第二个参数是访问的资源地址</li><li>第三个参数为是不是异步</li></ul><blockquote><p><code>&lt;src&gt;</code>：资源地址</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">"GET"</span>, <span class="string">"&lt;src&gt;"</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h3 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h3><ul><li>在合适的时候处理结果</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.send();</span><br></pre></td></tr></table></figure><h2 id="readyState状态码"><a href="#readyState状态码" class="headerlink" title="readyState状态码"></a>readyState状态码</h2><table><thead><tr><th>状态码</th><th>备注</th></tr></thead><tbody><tr><td>0</td><td>未准备好</td></tr><tr><td>1</td><td>准备发送</td></tr><tr><td>2</td><td>发送请求</td></tr><tr><td>3</td><td>正在交互</td></tr><tr><td>4</td><td>交互完成</td></tr></tbody></table><h2 id="未完待更"><a href="#未完待更" class="headerlink" title="未完待更"></a>未完待更</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/25/Ajax%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】EL表达式</title>
      <link>https://feiju12138.github.io/2020/05/25/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <guid>https://feiju12138.github.io/2020/05/25/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <pubDate>Mon, 25 May 2020 02:49:54 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;表达式语言（Expression Language），或称EL表达式，简称EL，是Java中的一种特殊的通用编程语言，借鉴于JavaScript和XPath。主要作用是在Java Web应用程序嵌入到网页（如JSP）中，用以访问页面的上下文以及不同作用域中的对象 ，取得对象属性的值，或执行简单的运算或判断操作。EL在得到某个数据时，会自动进行数据类型的转换。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/表达式语言&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>表达式语言（Expression Language），或称EL表达式，简称EL，是Java中的一种特殊的通用编程语言，借鉴于JavaScript和XPath。主要作用是在Java Web应用程序嵌入到网页（如JSP）中，用以访问页面的上下文以及不同作用域中的对象 ，取得对象属性的值，或执行简单的运算或判断操作。EL在得到某个数据时，会自动进行数据类型的转换。（<a href="https://zh.wikipedia.org/wiki/表达式语言" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><ul><li>直接插入到jsp代码中，可以将值直接显示在html页面</li><li>如果获取不到值，不显示任何内容（包括null）</li></ul><h3 id="获取会话"><a href="#获取会话" class="headerlink" title="获取会话"></a>获取会话</h3><blockquote><p><code>&lt;key&gt;</code>：servlet中<code>request请求传入的会话数据</code>的键</p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;&lt;key&gt;&#125;</span><br></pre></td></tr></table></figure><h4 id="获取对象"><a href="#获取对象" class="headerlink" title="获取对象"></a>获取对象</h4><ul><li>如果会话中存储的是对象，可以直接取对象中的属性</li></ul><blockquote><p><code>&lt;attributes&gt;</code>：对象的属性</p></blockquote><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;&lt;key&gt;.&lt;attributes&gt;&#125;</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><table><thead><tr><th>代码</th><th>含义</th></tr></thead><tbody><tr><td>gt</td><td>大于</td></tr><tr><td>lt</td><td>小于</td></tr><tr><td>eq</td><td>等于</td></tr><tr><td>ne</td><td>不等于</td></tr><tr><td>ge</td><td>大于等于</td></tr><tr><td>le</td><td>小于等于</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><table><thead><tr><th>代码</th><th>含义</th></tr></thead><tbody><tr><td>and</td><td>与</td></tr><tr><td>or</td><td>或</td></tr></tbody></table><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/25/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】JSTL学习笔记</title>
      <link>https://feiju12138.github.io/2020/05/25/JSTL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/05/25/JSTL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Mon, 25 May 2020 02:47:37 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;JSP标准标签库（JSP Standard Tag Library）是Java EE网络应用程序开发平台的组成部分。它在JSP规范的基础上，扩充了一个JSP的标签库来完成一些通用任务，比如XML数据处理、条件执行、数据库访问、循环和国际化。&lt;br&gt;JSTL是在JCP下，作为JSR 52被开发出来的。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/JSTL&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>JSP标准标签库（JSP Standard Tag Library）是Java EE网络应用程序开发平台的组成部分。它在JSP规范的基础上，扩充了一个JSP的标签库来完成一些通用任务，比如XML数据处理、条件执行、数据库访问、循环和国际化。<br>JSTL是在JCP下，作为JSR 52被开发出来的。（<a href="https://zh.wikipedia.org/wiki/JSTL" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>在项目中导入以下jar包</li></ul><p><code>jsf-api.jar</code>、<code>jsf-impl.jar</code>、<code>jstl-1.2.jar</code></p><h2 id="导入JSTL标签库"><a href="#导入JSTL标签库" class="headerlink" title="导入JSTL标签库"></a>导入JSTL标签库</h2><ul><li>在jsp的HTML代码之上添加代码</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br></pre></td></tr></table></figure><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><blockquote><p><code>&lt;el&gt;</code>：EL表达式，做判断</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"&lt;el&gt;"</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/c:if&gt;</span><br></pre></td></tr></table></figure><h3 id="choose语句"><a href="#choose语句" class="headerlink" title="choose语句"></a>choose语句</h3><ul><li>利用<code>&lt;c:otherwise&gt;&lt;/c:otherwise&gt;</code>语句取反</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">"&lt;el&gt;"</span>&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:otherwise&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><blockquote><p><code>&lt;el&gt;</code>：EL表达式，表示java中<code>for each</code>循环<code>:</code>后面表示的内容</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">"&lt;el&gt;"</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/25/JSTL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【代码】初始化你的专家</title>
      <link>https://feiju12138.github.io/2020/05/24/%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BD%A0%E7%9A%84%E4%B8%93%E5%AE%B6/</link>
      <guid>https://feiju12138.github.io/2020/05/24/%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BD%A0%E7%9A%84%E4%B8%93%E5%AE%B6/</guid>
      <pubDate>Sun, 24 May 2020 12:57:37 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;关卡攻略&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关卡攻略</p><a id="more"></a><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> expert = <span class="type">Expert</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> ... <span class="number">4</span> &#123;</span><br><span class="line">    expert.moveForward()</span><br><span class="line">    expert.moveForward()</span><br><span class="line">    expert.moveForward()</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">1</span> &#123;</span><br><span class="line">        expert.turnLockUp()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        expert.collectGem()</span><br><span class="line">    &#125;</span><br><span class="line">    expert.turnLeft()</span><br><span class="line">    expert.turnLeft()</span><br><span class="line">    expert.moveForward()</span><br><span class="line">    expert.moveForward()</span><br><span class="line">    expert.moveForward()</span><br><span class="line">    expert.turnLeft()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/24/%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BD%A0%E7%9A%84%E4%B8%93%E5%AE%B6/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
