<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Mon, 28 Sep 2020 11:36:32 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【代码】SpringBoot项目使用Hikari连接池</title>
      <link>https://feiju12138.github.io/2020/09/28/SpringBoot%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8Hikari%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
      <guid>https://feiju12138.github.io/2020/09/28/SpringBoot%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8Hikari%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
      <pubDate>Mon, 28 Sep 2020 11:31:04 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目整合数据库连接池后，默认使用Hikari连接池&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目整合数据库连接池后，默认使用Hikari连接池</p><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><a href="/2020/08/28/SpringBoot整合数据库连接池/">传送门</a></li></ul><h2 id="使用连接池实现查询"><a href="#使用连接池实现查询" class="headerlink" title="使用连接池实现查询"></a>使用连接池实现查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span><span class="comment">// 描述数据层实现类对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultGoodsDao</span> <span class="keyword">implements</span> <span class="title">GoodsDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询商品信息，一行记录映射为内存中的一个map对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; findGoods() &#123;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1. 获取连接</span></span><br><span class="line">            Connection connection = dataSource.getConnection();</span><br><span class="line">            <span class="comment">//2. 创建statement对象</span></span><br><span class="line">            Statement statement = connection.createStatement();</span><br><span class="line">            <span class="comment">//3. 发送sql</span></span><br><span class="line">            ResultSet resultSet = statement.executeQuery(<span class="string">"SELECT * FROM tb_goods"</span>);</span><br><span class="line">            <span class="comment">//4. 处理结果</span></span><br><span class="line">            <span class="keyword">while</span>(resultSet.next()) &#123;</span><br><span class="line">                <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">                String name = resultSet.getString(<span class="string">"name"</span>);</span><br><span class="line">                String remark = resultSet.getString(<span class="string">"remark"</span>);</span><br><span class="line">                Time createdTime = resultSet.getTime(<span class="string">"createdTime"</span>);</span><br><span class="line">                <span class="comment">//System.out.println("id:"+id+" name:"+name+" remark:"+remark+" createdTime"+createdTime);</span></span><br><span class="line">                Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">                map.put(<span class="string">"id"</span>, id);</span><br><span class="line">                map.put(<span class="string">"name"</span>, name);</span><br><span class="line">                map.put(<span class="string">"remark"</span>, remark);</span><br><span class="line">                map.put(<span class="string">"createdTime"</span>, createdTime);</span><br><span class="line">                list.add(map);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//5. 释放资源</span></span><br><span class="line">            resultSet.close();</span><br><span class="line">            statement.close();</span><br><span class="line">            connection.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="进行简单的封装"><a href="#进行简单的封装" class="headerlink" title="进行简单的封装"></a>进行简单的封装</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultGoodsDao</span> <span class="keyword">implements</span>  <span class="title">GoodsDao</span></span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;<span class="comment">//hikariCP</span></span><br><span class="line">    <span class="comment">/**查询商品信息,一行记录映射为内存中的一个map对象*/</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String,Object&gt;&gt; findGoods()&#123;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;<span class="comment">//java.sql.*</span></span><br><span class="line">        Statement stmt=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">        String sql=<span class="string">"select id,name,remark note,createdTime from tb_goods"</span>;</span><br><span class="line">        <span class="comment">//1.获取连接(从连接池获取)</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn=dataSource.getConnection();</span><br><span class="line">            <span class="comment">//2.创建statement对象</span></span><br><span class="line">            stmt=conn.createStatement();</span><br><span class="line">            <span class="comment">//3.发送sql</span></span><br><span class="line">            rs=stmt.executeQuery(sql);</span><br><span class="line">            <span class="comment">//4.处理结果</span></span><br><span class="line">            List&lt;Map&lt;String,Object&gt;&gt; list=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;<span class="comment">//循环一次取一行,一行记录映射为一个map对象</span></span><br><span class="line">                list.add( rowMap(rs));<span class="comment">//将存储了一行记录的map对象再存储到list集合</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);<span class="comment">//转换为非检查异常(编译时不检测的异常)</span></span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">//5. 释放资源</span></span><br><span class="line">            close(rs,stmt,conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> Map&lt;String,Object&gt; <span class="title">rowMap</span><span class="params">(ResultSet rs)</span><span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; rowMap=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//方法1映射</span></span><br><span class="line">        <span class="comment">//rowMap.put("id",rs.getInt("id"));</span></span><br><span class="line">        <span class="comment">//rowMap.put("name",rs.getString("name"));</span></span><br><span class="line">        <span class="comment">//rowMap.put("remark",rs.getString("remark"));</span></span><br><span class="line">        <span class="comment">//rowMap.put("createdTime",rs.getTimestamp("createdTime"));</span></span><br><span class="line">        <span class="comment">//方法2映射</span></span><br><span class="line">        ResultSetMetaData rsmd=rs.getMetaData();<span class="comment">//获取元数据(包括表中的字段名)</span></span><br><span class="line">        <span class="keyword">int</span> columnCount=rsmd.getColumnCount();<span class="comment">//获取列的数量</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;columnCount;i++)&#123;</span><br><span class="line">            rowMap.put(rsmd.getColumnLabel(i+<span class="number">1</span>),rs.getObject(rsmd.getColumnLabel(i+<span class="number">1</span>)));</span><br><span class="line">            <span class="comment">//getColumnLabel(i+1);获取表中字段名或字段名对应的别名</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rowMap;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs,Statement stmt,Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(rs!=<span class="keyword">null</span>)<span class="keyword">try</span>&#123;rs.close();&#125;<span class="keyword">catch</span>(Exception e)&#123;e.printStackTrace();&#125;</span><br><span class="line">        <span class="keyword">if</span>(stmt!=<span class="keyword">null</span>)<span class="keyword">try</span>&#123;stmt.close();&#125;<span class="keyword">catch</span>(Exception e)&#123;e.printStackTrace();&#125;</span><br><span class="line">        <span class="comment">//这里的连接是返回到了池中</span></span><br><span class="line">        <span class="keyword">if</span>(conn!=<span class="keyword">null</span>)<span class="keyword">try</span>&#123;conn.close();&#125;<span class="keyword">catch</span>(Exception e)&#123;e.printStackTrace();&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/28/SpringBoot%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8Hikari%E8%BF%9E%E6%8E%A5%E6%B1%A0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【骚操作】破解Chrome小恐龙游戏</title>
      <link>https://feiju12138.github.io/2020/09/28/%E7%A0%B4%E8%A7%A3Chrome%E5%B0%8F%E6%81%90%E9%BE%99%E6%B8%B8%E6%88%8F/</link>
      <guid>https://feiju12138.github.io/2020/09/28/%E7%A0%B4%E8%A7%A3Chrome%E5%B0%8F%E6%81%90%E9%BE%99%E6%B8%B8%E6%88%8F/</guid>
      <pubDate>Mon, 28 Sep 2020 11:17:13 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通过在Chrome控制台修改Javascript代码，破解小恐龙游戏（&lt;a href=&quot;chrome://dino/&quot;&gt;chrome://dino&lt;/a&gt;），实现无敌和加速&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通过在Chrome控制台修改Javascript代码，破解小恐龙游戏（<a href="chrome://dino/">chrome://dino</a>），实现无敌和加速</p><a id="more"></a><h2 id="无敌"><a href="#无敌" class="headerlink" title="无敌"></a>无敌</h2><ul><li>将内置的<code>gameOver</code>条件从原来的判定函数改为空函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runner.prototype.gameOver = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h2><ul><li>通过使用内置的<code>setSpeed()</code>函数修改速率</li></ul><blockquote><p><code>&lt;num&gt;</code>：速率值</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runner.instance_.setSpeed(<span class="xml"><span class="tag">&lt;<span class="name">num</span>&gt;</span>)</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://xiaozhizsk.baklib.com/16e5/25d7" target="_blank" rel="noopener">小志知识库</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/28/%E7%A0%B4%E8%A7%A3Chrome%E5%B0%8F%E6%81%90%E9%BE%99%E6%B8%B8%E6%88%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【代码】Node创建简单的Web服务器</title>
      <link>https://feiju12138.github.io/2020/09/24/Node%E5%88%9B%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <guid>https://feiju12138.github.io/2020/09/24/Node%E5%88%9B%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <pubDate>Thu, 24 Sep 2020 14:53:07 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;使用Nodejs，创建一个简单的Web服务器&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用Nodejs，创建一个简单的Web服务器</p><a id="more"></a><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><ul><li>创建<code>server.js</code>文件</li></ul><h3 id="正常访问"><a href="#正常访问" class="headerlink" title="正常访问"></a>正常访问</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="comment">// 创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app = http.createServer();</span><br><span class="line"><span class="comment">// 设置端口</span></span><br><span class="line">app.listen(<span class="number">80</span>);</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line">app.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取请求的URL和请求的方法</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.url, req.method);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 200，正常访问</span></span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"text/html;charset=utf-8"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 设置相应内容</span></span><br><span class="line">    res.write(<span class="string">""</span>);</span><br><span class="line">    <span class="comment">// 结束并发送响应</span></span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="异常访问"><a href="#异常访问" class="headerlink" title="异常访问"></a>异常访问</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="comment">// 创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app = http.createServer();</span><br><span class="line"><span class="comment">// 设置端口</span></span><br><span class="line">app.listen(<span class="number">80</span>);</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line">app.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取请求的URL和请求的方法</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.url, req.method);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 404，异常访问</span></span><br><span class="line">    res.writeHead(<span class="number">404</span>);</span><br><span class="line">    <span class="comment">// 设置相应内容</span></span><br><span class="line">    res.write(<span class="string">""</span>);</span><br><span class="line">    <span class="comment">// 结束并发送响应</span></span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="comment">// 创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app = http.createServer();</span><br><span class="line"><span class="comment">// 设置端口</span></span><br><span class="line">app.listen(<span class="number">80</span>);</span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line">app.on(<span class="string">"request"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取请求的URL和请求的方法</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.url, req.method);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 302，重定向</span></span><br><span class="line">    res.writeHead(<span class="number">302</span>, &#123;</span><br><span class="line">        Location: <span class="string">"https:feiju12138.github.io"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 结束并发送响应</span></span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node server.js</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/24/Node%E5%88%9B%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】IDEA快捷键</title>
      <link>https://feiju12138.github.io/2020/09/24/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <guid>https://feiju12138.github.io/2020/09/24/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <pubDate>Thu, 24 Sep 2020 14:32:30 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;IDEA快捷键&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>IDEA快捷键</p><a id="more"></a><h2 id="Windows-amp-Linux"><a href="#Windows-amp-Linux" class="headerlink" title="Windows &amp; Linux"></a>Windows &amp; Linux</h2><p><img src="/images/20200924223230/01.jpg" alt="01.jpg"></p><h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><p><img src="/images/20200924223230/02.jpg" alt="02.jpg"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/24/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Npm学习笔记</title>
      <link>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Wed, 23 Sep 2020 12:57:41 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;npm（全称 Node Package Manager，即“node包管理器”）是Node.js默认的、用JavaScript编写的软件包管理系统。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Npm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>npm（全称 Node Package Manager，即“node包管理器”）是Node.js默认的、用JavaScript编写的软件包管理系统。（<a href="https://zh.wikipedia.org/wiki/Npm" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="安装Npm"><a href="#安装Npm" class="headerlink" title="安装Npm"></a>安装Npm</h2><ul><li>安装Nodejs默认会预装Npm</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h2 id="模块位置"><a href="#模块位置" class="headerlink" title="模块位置"></a>模块位置</h2><h3 id="本地位置"><a href="#本地位置" class="headerlink" title="本地位置"></a>本地位置</h3><ul><li>在终端当前目录下会产生<code>node_modules</code>目录</li></ul><h3 id="全局位置"><a href="#全局位置" class="headerlink" title="全局位置"></a>全局位置</h3><ul><li>MacOS会在<code>/usr/local/lib/</code>目录下产生<code>node_modules</code>目录</li></ul><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><blockquote><p><code>&lt;package&gt;</code>：软件包名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package&gt;</span><br></pre></td></tr></table></figure><h3 id="全局操作"><a href="#全局操作" class="headerlink" title="全局操作"></a>全局操作</h3><blockquote><p><code>-g</code>：全局操作</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package&gt; -g</span><br></pre></td></tr></table></figure><h4 id="升级自身"><a href="#升级自身" class="headerlink" title="升级自身"></a>升级自身</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm -g</span><br></pre></td></tr></table></figure><h2 id="卸载模块"><a href="#卸载模块" class="headerlink" title="卸载模块"></a>卸载模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="查看已安装模块"><a href="#查看已安装模块" class="headerlink" title="查看已安装模块"></a>查看已安装模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm ls</span><br><span class="line">npm list</span><br></pre></td></tr></table></figure><h3 id="查看指定已安装模块"><a href="#查看指定已安装模块" class="headerlink" title="查看指定已安装模块"></a>查看指定已安装模块</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="查找模块"><a href="#查找模块" class="headerlink" title="查找模块"></a>查找模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm search &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="升级模块"><a href="#升级模块" class="headerlink" title="升级模块"></a>升级模块</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="清空本地缓存"><a href="#清空本地缓存" class="headerlink" title="清空本地缓存"></a>清空本地缓存</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clear</span><br></pre></td></tr></table></figure><h2 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="查看指定命令帮助"><a href="#查看指定命令帮助" class="headerlink" title="查看指定命令帮助"></a>查看指定命令帮助</h3><blockquote><p><code>&lt;command&gt;</code>：命令名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用淘宝镜像</h2><ul><li>国内使用淘宝镜像实现加速效果</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm</span><br><span class="line"></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="国内版Npm命令"><a href="#国内版Npm命令" class="headerlink" title="国内版Npm命令"></a>国内版Npm命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install &lt;package&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.runoob.com/nodejs/nodejs-npm.html" target="_blank" rel="noopener">菜鸟笔记</a><br><a href="https://blog.csdn.net/idomyway/article/details/85226579" target="_blank" rel="noopener">CSDN——idomyway</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/09/23/Npm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
