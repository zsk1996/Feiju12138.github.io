<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Wed, 13 May 2020 08:17:54 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【代码】文件上传</title>
      <link>https://feiju12138.github.io/2020/05/13/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
      <guid>https://feiju12138.github.io/2020/05/13/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</guid>
      <pubDate>Wed, 13 May 2020 08:01:56 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Javaweb实现文件上传&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Javaweb实现文件上传</p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>导入jar包</li></ul><p>将<code>commons-io-2.4.jar</code>、<code>commons-fileupload-1.2.2.jar</code>放到项目的<code>/WebContent/WEB-INF/lib</code>目录下</p><ul><li>在项目的<code>/WebContent</code>目录下新建用于存放上传的文件的目录<code>file</code></li></ul><h2 id="前端页面代码"><a href="#前端页面代码" class="headerlink" title="前端页面代码"></a>前端页面代码</h2><ul><li>在<code>/WebContent</code>目录下新建<code>index.html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"myfile"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Servlet代码"><a href="#Servlet代码" class="headerlink" title="Servlet代码"></a>Servlet代码</h2><ul><li>在包下新建<code>Upload.java</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.github.feiju12138;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItemIterator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItemStream;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Upload</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 声明输入缓冲流</span></span><br><span class="line">        InputStream is = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 声明文件输出流</span></span><br><span class="line">        FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 创建上传文件对象</span></span><br><span class="line">        ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 把上传的文件转换为迭代器</span></span><br><span class="line">            FileItemIterator iterator = upload.getItemIterator(req);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 遍历文件流中的字节</span></span><br><span class="line">            <span class="keyword">while</span>(iterator.hasNext()) &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 取出一个文件</span></span><br><span class="line">                FileItemStream fis = iterator.next();</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 开启输入缓冲流</span></span><br><span class="line">                is = fis.openStream();</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 获取文件存放路径</span></span><br><span class="line">                String path = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"file"</span>);</span><br><span class="line">                path += <span class="string">"/"</span> + fis.getName();</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 创建文件输出流</span></span><br><span class="line">                fos = <span class="keyword">new</span> FileOutputStream(path);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 将文件输出到指定目录</span></span><br><span class="line">                <span class="keyword">byte</span> buf[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>((len = is.read(buf)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    fos.write(buf, <span class="number">0</span>, len);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 关闭文件输出流</span></span><br><span class="line">            <span class="keyword">if</span>(fos != <span class="keyword">null</span>) &#123;</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 关闭文件缓冲流</span></span><br><span class="line">            <span class="keyword">if</span>(is != <span class="keyword">null</span>) &#123;</span><br><span class="line">                is.close();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>达内教育</p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/13/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Servlet初始化参数</title>
      <link>https://feiju12138.github.io/2020/05/13/Servlet%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%82%E6%95%B0/</link>
      <guid>https://feiju12138.github.io/2020/05/13/Servlet%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%82%E6%95%B0/</guid>
      <pubDate>Wed, 13 May 2020 03:14:46 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;ServletConfig对象&lt;/code&gt;和&lt;code&gt;ServletContext对象&lt;/code&gt;学习笔记&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>ServletConfig对象</code>和<code>ServletContext对象</code>学习笔记</p><a id="more"></a><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><ul><li>在web.xml文件中，以键值对的形式添加配置参数，可以添加多组</li></ul><blockquote><p><code>&lt;&lt;name&gt;&gt;</code>：参数名（键）<br><code>&lt;&lt;value&gt;</code>：参数值（值）</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    &lt;param-name&gt;&lt;&lt;name&gt;&gt;&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;&lt;&lt;value&gt;&gt;&lt;/param-value&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="获取Servlet初始化参数对象"><a href="#获取Servlet初始化参数对象" class="headerlink" title="获取Servlet初始化参数对象"></a>获取Servlet初始化参数对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServletConfig config = <span class="keyword">this</span>.getServletConfig();</span><br></pre></td></tr></table></figure><h2 id="读取参数"><a href="#读取参数" class="headerlink" title="读取参数"></a>读取参数</h2><h3 id="通过键读取值"><a href="#通过键读取值" class="headerlink" title="通过键读取值"></a>通过键读取值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.getInitParameter(<span class="string">"&lt;&lt;name&gt;&gt;"</span>);</span><br></pre></td></tr></table></figure><h3 id="读取所有的键"><a href="#读取所有的键" class="headerlink" title="读取所有的键"></a>读取所有的键</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Enumeration&lt;String&gt; names = config.InitParameterNames();</span><br><span class="line"><span class="keyword">while</span>(names.hasMoreElements()) &#123;</span><br><span class="line">    String name = names.nextElement();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h2><ul><li>解决中文乱码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br></pre></td></tr></table></figure><h2 id="获取ServletContext对象"><a href="#获取ServletContext对象" class="headerlink" title="获取ServletContext对象"></a>获取ServletContext对象</h2><ul><li>项目上下文对象，代表整个项目</li><li>三种方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">ServletContext context = req.getServletContext();</span><br><span class="line">ServletContext context = <span class="keyword">this</span>.getServletConfig().getServletContext();</span><br></pre></td></tr></table></figure><h2 id="获取资源名"><a href="#获取资源名" class="headerlink" title="获取资源名"></a>获取资源名</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getServletName()</span><br></pre></td></tr></table></figure><h2 id="获取资源位置"><a href="#获取资源位置" class="headerlink" title="获取资源位置"></a>获取资源位置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">context.getReadPath(getServletName());</span><br></pre></td></tr></table></figure><h2 id="写入Context数据"><a href="#写入Context数据" class="headerlink" title="写入Context数据"></a>写入Context数据</h2><ul><li>保存需要长久保存的数据（只要不关闭服务器就可以一直保存）</li></ul><blockquote><p><code>&lt;key&gt;</code>：数据名（键）<br><code>&lt;value&gt;</code>：数据值（值）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">context.setAttribute(<span class="string">"&lt;key&gt;"</span>, <span class="string">"&lt;value&gt;"</span>);</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">## 读取Context数据</span><br><span class="line"></span><br><span class="line">``` java</span><br><span class="line">context.getAttribute(<span class="string">"&lt;key&gt;"</span>, <span class="string">"&lt;value&gt;"</span>);</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>达内教育</p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/13/Servlet%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%82%E6%95%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Session学习笔记</title>
      <link>https://feiju12138.github.io/2020/05/13/Session%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/05/13/Session%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Wed, 13 May 2020 02:39:12 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Session：在计算机中，尤其是在网络应用中，称为“会话控制”。Session对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的Web页之间跳转时，存储在Session对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web页时，如果该用户还没有会话，则Web服务器将自动创建一个 Session对象。当会话过期或被放弃后，服务器将终止该会话。Session 对象最常见的一个用法就是存储用户的首选项。例如，如果用户指明不喜欢查看图形，就可以将该信息存储在Session对象中。有关使用Session 对象的详细信息，请参阅“ASP应用程序”部分的“管理会话”。注意会话状态仅在支持cookie的浏览器中保留。（&lt;a href=&quot;https://baike.baidu.com/item/Session/479100&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度百科&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;用Javaweb实现Session&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Session：在计算机中，尤其是在网络应用中，称为“会话控制”。Session对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的Web页之间跳转时，存储在Session对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web页时，如果该用户还没有会话，则Web服务器将自动创建一个 Session对象。当会话过期或被放弃后，服务器将终止该会话。Session 对象最常见的一个用法就是存储用户的首选项。例如，如果用户指明不喜欢查看图形，就可以将该信息存储在Session对象中。有关使用Session 对象的详细信息，请参阅“ASP应用程序”部分的“管理会话”。注意会话状态仅在支持cookie的浏览器中保留。（<a href="https://baike.baidu.com/item/Session/479100" target="_blank" rel="noopener">百度百科</a>）</p><p>用Javaweb实现Session</p><a id="more"></a><h2 id="获取Session对象"><a href="#获取Session对象" class="headerlink" title="获取Session对象"></a>获取Session对象</h2><ul><li>因为Session是服务器自动创建的，所以不需要创建Session对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = req.getSession();</span><br></pre></td></tr></table></figure><h2 id="查看Session编号"><a href="#查看Session编号" class="headerlink" title="查看Session编号"></a>查看Session编号</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.getID();</span><br></pre></td></tr></table></figure><h2 id="写入Session数据"><a href="#写入Session数据" class="headerlink" title="写入Session数据"></a>写入Session数据</h2><ul><li>Session是以键值对的形式存入的</li></ul><blockquote><p><code>&lt;key&gt;</code>：键，String类型<br><code>&lt;value&gt;</code>：值，Object类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">session.setAttribute(<span class="string">"&lt;key&gt;"</span>, <span class="string">"&lt;value&gt;"</span>);</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">## 读取Session数据</span><br><span class="line"></span><br><span class="line">- 返回Object类型</span><br><span class="line"></span><br><span class="line">``` java</span><br><span class="line">session.getAttribute(<span class="string">"&lt;key&gt;"</span>);</span><br></pre></td></tr></table></figure><h2 id="设置Session有效期"><a href="#设置Session有效期" class="headerlink" title="设置Session有效期"></a>设置Session有效期</h2><ul><li>Session有效期默认30分钟。如果值为-1，则为永不过期（浏览器未关闭的情况下）</li></ul><blockquote><p><code>&lt;num&gt;</code>：单位：秒</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.setMaxInactiveInterval(&lt;num&gt;);</span><br></pre></td></tr></table></figure><h3 id="统一设置Session有效期"><a href="#统一设置Session有效期" class="headerlink" title="统一设置Session有效期"></a>统一设置Session有效期</h3><ul><li>在web.xml配置Session有效期</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span><span class="tag">&lt;<span class="name">num</span>&gt;</span><span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="销毁Session"><a href="#销毁Session" class="headerlink" title="销毁Session"></a>销毁Session</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.invalidate();</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>达内教育</p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/13/Session%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Cookie学习笔记</title>
      <link>https://feiju12138.github.io/2020/05/13/Cookie%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/05/13/Cookie%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Wed, 13 May 2020 02:25:08 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Cookie（复数形态Cookies），又称为“小甜饼”。类型为“小型文本文件”，指某些网站为了辨别用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。由网景公司的前雇员卢·蒙特利在1993年3月发明。最初定义于RFC 2109。当前使用最广泛的 Cookie标准却不是RFC中定义的任何一个，而是在网景公司制定的标准上进行扩展后的产物。（&lt;a href=&quot;https://zh.wikipedia.org/wiki/Cookie&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;用Javaweb实现Cookie&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Cookie（复数形态Cookies），又称为“小甜饼”。类型为“小型文本文件”，指某些网站为了辨别用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。由网景公司的前雇员卢·蒙特利在1993年3月发明。最初定义于RFC 2109。当前使用最广泛的 Cookie标准却不是RFC中定义的任何一个，而是在网景公司制定的标准上进行扩展后的产物。（<a href="https://zh.wikipedia.org/wiki/Cookie" target="_blank" rel="noopener">维基百科</a>）</p><p>用Javaweb实现Cookie</p><a id="more"></a><h2 id="创建Cookie对象"><a href="#创建Cookie对象" class="headerlink" title="创建Cookie对象"></a>创建Cookie对象</h2><ul><li>Cookie都是由键值对构成的</li></ul><blockquote><p><code>&lt;key&gt;</code>：键<br><code>&lt;value&gt;</code>：值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"&lt;key&gt;"</span>, <span class="string">"&lt;value&gt;"</span>);</span><br></pre></td></tr></table></figure><h2 id="写入Cookie到客户端"><a href="#写入Cookie到客户端" class="headerlink" title="写入Cookie到客户端"></a>写入Cookie到客户端</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.addCookie(cookie);</span><br></pre></td></tr></table></figure><h2 id="读取Cookie"><a href="#读取Cookie" class="headerlink" title="读取Cookie"></a>读取Cookie</h2><ul><li>读取到的是Cookie数组</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookies[] = req.getCookies();</span><br></pre></td></tr></table></figure><h3 id="获取Cookie的名字"><a href="#获取Cookie的名字" class="headerlink" title="获取Cookie的名字"></a>获取Cookie的名字</h3><ul><li>返回String类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookie.getName();</span><br></pre></td></tr></table></figure><h3 id="获取Cookie的值"><a href="#获取Cookie的值" class="headerlink" title="获取Cookie的值"></a>获取Cookie的值</h3><ul><li>返回String类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookie.getValue();</span><br></pre></td></tr></table></figure><h2 id="设置Cookie有效期"><a href="#设置Cookie有效期" class="headerlink" title="设置Cookie有效期"></a>设置Cookie有效期</h2><blockquote><p><code>&lt;num&gt;</code>：单位：秒</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookie.setMaxAge(&lt;num&gt;);</span><br></pre></td></tr></table></figure><h2 id="Cookie的注意事项"><a href="#Cookie的注意事项" class="headerlink" title="Cookie的注意事项"></a>Cookie的注意事项</h2><ul><li><p>Cookie存储的数据保存在客户端</p></li><li><p>单个Cookie大小不能超过4kb</p></li><li><p>一个域名最多可以往一个客户端写20个Cookie</p></li><li><p>Cookie只能存放安全性要求不高的信息，比如密码等信息不能直接保存在Cookie</p></li><li><p>不同浏览器读取不同的Cookie</p></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>达内教育</p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/13/Cookie%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Servlet学习笔记</title>
      <link>https://feiju12138.github.io/2020/05/10/Servlet%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/05/10/Servlet%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sun, 10 May 2020 02:30:51 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Servlet学习笔记&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Servlet学习笔记</p><a id="more"></a><h2 id="编写Servlet类"><a href="#编写Servlet类" class="headerlink" title="编写Servlet类"></a>编写Servlet类</h2><ul><li>继承<code>HttpServlet</code>类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理请求"><a href="#处理请求" class="headerlink" title="处理请求"></a>处理请求</h2><h3 id="处理GET请求"><a href="#处理GET请求" class="headerlink" title="处理GET请求"></a>处理GET请求</h3><ul><li>默认处理GET请求</li><li>重写<code>doGet</code>方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="处理POST请求"><a href="#处理POST请求" class="headerlink" title="处理POST请求"></a>处理POST请求</h3><ul><li>重写<code>doPost</code>方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置响应类型"><a href="#设置响应类型" class="headerlink" title="设置响应类型"></a>设置响应类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.setContentType(<span class="string">"text/html"</span>);</span><br></pre></td></tr></table></figure><h3 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.setContentType(<span class="string">"text/html; charset=utf-8"</span>);</span><br></pre></td></tr></table></figure><h2 id="创建输出流对象"><a href="#创建输出流对象" class="headerlink" title="创建输出流对象"></a>创建输出流对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PrintWriter out = resp.getWriter();</span><br></pre></td></tr></table></figure><ul><li>输出到网页</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">out.println(<span class="string">"&lt;html&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;head&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;title&gt;&lt;/title&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;/head&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;body&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;/body&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;/html&gt;"</span>);</span><br></pre></td></tr></table></figure><h2 id="req的常用方法"><a href="#req的常用方法" class="headerlink" title="req的常用方法"></a>req的常用方法</h2><h3 id="设置请求编码"><a href="#设置请求编码" class="headerlink" title="设置请求编码"></a>设置请求编码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br></pre></td></tr></table></figure><h3 id="获取请求参数"><a href="#获取请求参数" class="headerlink" title="获取请求参数"></a>获取请求参数</h3><ul><li>请求参数为键值对，获取请求参数就是通过键获取值的过程</li></ul><blockquote><p><code>&lt;string&gt;</code>：参数名（键）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getParameter(<span class="string">"&lt;string&gt;"</span>);</span><br></pre></td></tr></table></figure><h3 id="获取URL"><a href="#获取URL" class="headerlink" title="获取URL"></a>获取URL</h3><ul><li>返回StringBuffer类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getRequestURL();</span><br></pre></td></tr></table></figure><h3 id="获取URI"><a href="#获取URI" class="headerlink" title="获取URI"></a>获取URI</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getRequestURI();</span><br></pre></td></tr></table></figure><h3 id="获取所有的请求参数"><a href="#获取所有的请求参数" class="headerlink" title="获取所有的请求参数"></a>获取所有的请求参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getQueryString();</span><br></pre></td></tr></table></figure><h3 id="获取ip地址"><a href="#获取ip地址" class="headerlink" title="获取ip地址"></a>获取ip地址</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getRemoteAddr();</span><br></pre></td></tr></table></figure><h3 id="获取客户端主机名"><a href="#获取客户端主机名" class="headerlink" title="获取客户端主机名"></a>获取客户端主机名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getRemoteHost();</span><br></pre></td></tr></table></figure><h3 id="获取客户端请求头"><a href="#获取客户端请求头" class="headerlink" title="获取客户端请求头"></a>获取客户端请求头</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Enumeration&lt;string&gt; reqHeaderNames = req.getHeaderNames();</span><br><span class="line"><span class="keyword">while</span>(reqHeaderNames.hasMoreElements()) &#123;</span><br><span class="line">    String headerNames = req.HeaderNames.nextElement();</span><br><span class="line">    String headerValue = req.getHeader(headerNames);</span><br><span class="line">    System.out.println(headerNames + <span class="string">":"</span> + headerValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="处理表单请求"><a href="#处理表单请求" class="headerlink" title="处理表单请求"></a>处理表单请求</h3><h4 id="获取文本框"><a href="#获取文本框" class="headerlink" title="获取文本框"></a>获取文本框</h4><h4 id="获取单选框"><a href="#获取单选框" class="headerlink" title="获取单选框"></a>获取单选框</h4><h4 id="获取下拉列表"><a href="#获取下拉列表" class="headerlink" title="获取下拉列表"></a>获取下拉列表</h4><h4 id="获取文本域"><a href="#获取文本域" class="headerlink" title="获取文本域"></a>获取文本域</h4><h4 id="获取隐藏域"><a href="#获取隐藏域" class="headerlink" title="获取隐藏域"></a>获取隐藏域</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">req.getParameter(<span class="string">"text"</span>);</span><br><span class="line">req.getParameter(<span class="string">"radio"</span>);</span><br><span class="line">req.getParameter(<span class="string">"select"</span>);</span><br><span class="line">req.getParameter(<span class="string">"textarea"</span>);</span><br><span class="line">req.getParameter(<span class="string">"hidden"</span>);</span><br></pre></td></tr></table></figure><h4 id="获取复选框"><a href="#获取复选框" class="headerlink" title="获取复选框"></a>获取复选框</h4><ul><li>返回String[]类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getParameterValues(<span class="string">"checkbox"</span>);</span><br></pre></td></tr></table></figure><h2 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h2><ul><li><p>当一个Servlet资源第一次被访问的时候，由服务器创建Servlet资源对象，通过调用Servlet的init()方法，完成对象的初始操作，该方法只会调用一次</p></li><li><p>对象完成初始化以后，服务器会调用Servlet()方法，完成相关的业务处理（执行各种操作，例如doGet或者doPost），该方法可以反复执行，每一次访问该Servlet资源都会执行该方法</p></li><li><p>当服务器停止的时候，服务器会调用Servlet资源的destroy()方法，用来销毁Servlet对象</p></li></ul><h3 id="自动初始化"><a href="#自动初始化" class="headerlink" title="自动初始化"></a>自动初始化</h3><ul><li><p>服务器启动的时候立即创建Servlet资源对象，同时访问init()方法完成对象的初始化，其中配置是一个整数数字，最小值是1，值越小，访问的优先级越高</p></li><li><p>修改<code>web.xml</code>的<code>&lt;servlet&gt;&lt;/servlet&gt;</code>块</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="请求转发（服务器端跳转）"><a href="#请求转发（服务器端跳转）" class="headerlink" title="请求转发（服务器端跳转）"></a>请求转发（服务器端跳转）</h2><ul><li>余下代码后执行，先跳转</li></ul><blockquote><p><code>&lt;name&gt;</code>：另一个资源的路径名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.getRequestDispatcher(<span class="string">"&lt;name&gt;"</span>).forward(req, resp);</span><br></pre></td></tr></table></figure><h2 id="目标重定向（客户端跳转）"><a href="#目标重定向（客户端跳转）" class="headerlink" title="目标重定向（客户端跳转）"></a>目标重定向（客户端跳转）</h2><ul><li>余下代码先执行，后跳转</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.sendRedirect(<span class="string">"&lt;name&gt;"</span>);</span><br></pre></td></tr></table></figure><h2 id="未完待更"><a href="#未完待更" class="headerlink" title="未完待更"></a>未完待更</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>达内教育</p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/05/10/Servlet%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
