<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Thu, 15 Oct 2020 08:07:15 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【踩坑】IDEA序列化自动生成UID</title>
      <link>https://feiju12138.github.io/2020/10/15/IDEA%E5%BA%8F%E5%88%97%E5%8C%96%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90UID/</link>
      <guid>https://feiju12138.github.io/2020/10/15/IDEA%E5%BA%8F%E5%88%97%E5%8C%96%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90UID/</guid>
      <pubDate>Thu, 15 Oct 2020 07:55:52 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;IDEA实现序列化接口后，不报错，默认无法自动生成UID&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>IDEA实现序列化接口后，不报错，默认无法自动生成UID</p><a id="more"></a><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ul><li><p>开启实现序列化接口无UID警告，通过警告自动生成UID</p></li><li><p><code>IntelliJ IDEA</code>-&gt;<code>Preferences</code>-&gt;<code>Editor</code>-&gt;<code>Inspections</code>-&gt;搜索<code>UID</code>-&gt;勾选<code>Serializable class without &#39;serialversionUID</code>-&gt;<code>OK</code></p></li></ul><p><img src="/images/20201015155552/01.png" alt="01.png"></p><ul><li>在类上通过<code>option键</code>+<code>return键</code>实现自动生成UID</li></ul><p><img src="/images/20201015155552/02.png" alt="02.png"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/u013806366/article/details/51911529" target="_blank" rel="noopener">CSDN——WOW我滴乖乖</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/15/IDEA%E5%BA%8F%E5%88%97%E5%8C%96%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90UID/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】POJO的设计</title>
      <link>https://feiju12138.github.io/2020/10/15/POJO%E7%9A%84%E8%AE%BE%E8%AE%A1/</link>
      <guid>https://feiju12138.github.io/2020/10/15/POJO%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      <pubDate>Thu, 15 Oct 2020 07:04:58 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在软件工程中，普通的Java对象（POJO）是普通的Java 对象，不受任何特殊限制。（&lt;a href=&quot;https://en.wikipedia.org/wiki/Plain_old_Java_object&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在软件工程中，普通的Java对象（POJO）是普通的Java 对象，不受任何特殊限制。（<a href="https://en.wikipedia.org/wiki/Plain_old_Java_object" target="_blank" rel="noopener">维基百科</a>）</p><a id="more"></a><h2 id="POJO的设计"><a href="#POJO的设计" class="headerlink" title="POJO的设计"></a>POJO的设计</h2><ul><li><p>在Java的SpringBoot项目中，对象分为业务对象（业务Bean）和实体对象（实体Bean）</p></li><li><p>实体对象（Entity）实际上可以总称为POJO（Plain Ordinary Java Object）</p></li><li><p>在三层架构中，可以继续分为VO（Value Object）、BO（Business Object）、PO（Persistant Object）、DO（Data Transfer Object）</p></li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.jianshu.com/p/b934b0d72602" target="_blank" rel="noopener">间书——莫问以</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/15/POJO%E7%9A%84%E8%AE%BE%E8%AE%A1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Windows微信多开</title>
      <link>https://feiju12138.github.io/2020/10/14/Windows%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80/</link>
      <guid>https://feiju12138.github.io/2020/10/14/Windows%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80/</guid>
      <pubDate>Wed, 14 Oct 2020 09:45:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Windows微信多开&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Windows微信多开</p><a id="more"></a><h2 id="微信多开"><a href="#微信多开" class="headerlink" title="微信多开"></a>微信多开</h2><ul><li><p>安装好微信后，保证没有已登陆的微信</p></li><li><p>右键微信图标，鼠标移动到打开位置（不要鼠标点击）</p></li><li><p>此时连续按多次回车键，按几次就会打开几个微信</p></li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://jingyan.baidu.com/article/4dc408484f97c3c8d946f109.html" target="_blank" rel="noopener">百度经验——Mr_ZDH_</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/14/Windows%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【踩坑】无法成功完成操作</title>
      <link>https://feiju12138.github.io/2020/10/14/%E6%97%A0%E6%B3%95%E6%88%90%E5%8A%9F%E5%AE%8C%E6%88%90%E6%93%8D%E4%BD%9C/</link>
      <guid>https://feiju12138.github.io/2020/10/14/%E6%97%A0%E6%B3%95%E6%88%90%E5%8A%9F%E5%AE%8C%E6%88%90%E6%93%8D%E4%BD%9C/</guid>
      <pubDate>Wed, 14 Oct 2020 03:17:45 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Windows打开程序报错：&lt;code&gt;无法成功完成操作，因为文件包含病毒或潜在的垃圾软件&lt;/code&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Windows打开程序报错：<code>无法成功完成操作，因为文件包含病毒或潜在的垃圾软件</code></p><a id="more"></a><p><img src="/images/20201014111745/01.png" alt="01.png"></p><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><h3 id="关闭实时保护"><a href="#关闭实时保护" class="headerlink" title="关闭实时保护"></a>关闭实时保护</h3><ul><li>右键<code>开始菜单</code>-&gt;<code>设置</code></li></ul><p><img src="/images/20201014111745/02.png" alt="02.png"></p><ul><li><code>更新和安全</code></li></ul><p><img src="/images/20201014111745/03.png" alt="03.png"></p><ul><li><code>Windows安全中心</code>-&gt;<code>打开Windows安全中心</code></li></ul><p><img src="/images/20201014111745/04.png" alt="04.png"></p><ul><li><code>病毒和威胁防护</code></li></ul><p><img src="/images/20201014111745/05.png" alt="05.png"></p><ul><li><code>病毒和威胁防护设置</code>-&gt;<code>管理设置</code></li></ul><p><img src="/images/20201014111745/06.png" alt="06.png"></p><ul><li>关闭<code>实时保护</code></li></ul><p><img src="/images/20201014111745/07.png" alt="07.png"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://jingyan.baidu.com/article/d2b1d102d2867c5c7f37d441.html" target="_blank" rel="noopener">百度经验——运维小子</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/14/%E6%97%A0%E6%B3%95%E6%88%90%E5%8A%9F%E5%AE%8C%E6%88%90%E6%93%8D%E4%BD%9C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Axios学习笔记</title>
      <link>https://feiju12138.github.io/2020/10/13/Axios%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/10/13/Axios%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Tue, 13 Oct 2020 08:46:14 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;易用、简洁且高效的http库（&lt;a href=&quot;http://axios-js.com/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中文官网&lt;/a&gt;）&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>易用、简洁且高效的http库（<a href="http://axios-js.com/zh-cn/" target="_blank" rel="noopener">中文官网</a>）</p><a id="more"></a><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"js/axios.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="实现AJAX"><a href="#实现AJAX" class="headerlink" title="实现AJAX"></a>实现AJAX</h2><h3 id="Get请求"><a href="#Get请求" class="headerlink" title="Get请求"></a>Get请求</h3><h4 id="直接拼接参数"><a href="#直接拼接参数" class="headerlink" title="直接拼接参数"></a>直接拼接参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.请求地址</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">"/doGet?name=zhangsan"</span>;</span><br><span class="line"><span class="comment">// 2. 发送请求</span></span><br><span class="line">axios.get(url,params).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.请求地址</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">"/doGet"</span>;</span><br><span class="line"><span class="comment">// 2. 定义参数</span></span><br><span class="line"><span class="keyword">let</span> params = &#123;</span><br><span class="line">    params: &#123;</span><br><span class="line">        name: <span class="string">"zhangsan"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 3. 发送请求</span></span><br><span class="line">axios.get(url,params).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Post请求"><a href="#Post请求" class="headerlink" title="Post请求"></a>Post请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.请求地址</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">"/doPostJSON"</span>;</span><br><span class="line"><span class="comment">// 2. 定义参数</span></span><br><span class="line"><span class="keyword">let</span> params = &#123;</span><br><span class="line">    name: <span class="string">"张三"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 3. 发送请求</span></span><br><span class="line">axios.post(url,params).then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="http://axios-js.com/zh-cn/docs/" target="_blank" rel="noopener">官网中文文档</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/10/13/Axios%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
