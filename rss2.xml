<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>绯鞠的博客</title>
    <link>https://feiju12138.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>捕捉一只爱折腾的绯鞠</description>
    <pubDate>Fri, 24 Jul 2020 08:26:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>【笔记】Java设计模式</title>
      <link>https://feiju12138.github.io/2020/07/24/Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <guid>https://feiju12138.github.io/2020/07/24/Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <pubDate>Fri, 24 Jul 2020 08:19:24 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Java 设计模式&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Java 设计模式</p><a id="more"></a><h2 id="单例设计模式"><a href="#单例设计模式" class="headerlink" title="单例设计模式"></a>单例设计模式</h2><ul><li>每个类只创建一个对象，节省内存</li></ul><ol><li>构造方法私有</li><li>外界设法获取内部创建好的对象</li><li>对外提供全局访问点</li></ol><h3 id="饿汉式"><a href="#饿汉式" class="headerlink" title="饿汉式"></a>饿汉式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MySingleton mySingleton = MySingleton.getMySingleton();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySingleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MySingleton mySingleton = <span class="keyword">new</span> MySingleton();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MySingleton</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MySingleton <span class="title">getMySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mySingleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="懒汉式"><a href="#懒汉式" class="headerlink" title="懒汉式"></a>懒汉式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MySingleton mySingleton = MySingleton.getMySingleton();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySingleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MySingleton mySingleton;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MySingleton</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MySingleton <span class="title">getMySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mySingleton==<span class="keyword">null</span>) &#123;</span><br><span class="line">            mySingleton = <span class="keyword">new</span> MySingleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mySingleton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决线程安全"><a href="#解决线程安全" class="headerlink" title="解决线程安全"></a>解决线程安全</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MySingleton mySingleton = MySingleton.getMySingleton();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySingleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MySingleton mySingleton;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MySingleton</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MySingleton <span class="title">getMySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (MySingleton<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (mySingleton==<span class="keyword">null</span>) &#123;</span><br><span class="line">                mySingleton = <span class="keyword">new</span> MySingleton();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> mySingleton;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/24/Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】反射学习笔记</title>
      <link>https://feiju12138.github.io/2020/07/23/%E5%8F%8D%E5%B0%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/07/23/%E5%8F%8D%E5%B0%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Thu, 23 Jul 2020 10:55:56 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
        
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>反射学习笔记<br>拿到class文件，分析里面的所有数据，操作数据</p><h2 id="获取类对象"><a href="#获取类对象" class="headerlink" title="获取类对象"></a>获取类对象</h2><h3 id="用类名获取"><a href="#用类名获取" class="headerlink" title="用类名获取"></a>用类名获取</h3><blockquote><p><code>&lt;Class&gt;</code>：类名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Class&gt;<span class="class">.<span class="keyword">class</span></span></span><br></pre></td></tr></table></figure><h3 id="用对象名获取"><a href="#用对象名获取" class="headerlink" title="用对象名获取"></a>用对象名获取</h3><blockquote><p><code>&lt;class&gt;</code>：引用类型变量名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span>&gt;.<span class="title">getClass</span>()</span></span><br></pre></td></tr></table></figure><h3 id="用类的全名获取"><a href="#用类的全名获取" class="headerlink" title="用类的全名获取"></a>用类的全名获取</h3><blockquote><p><code>&lt;package.class&gt;</code>：类全名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; c = Class.forName(<span class="string">"&lt;package.class&gt;"</span>);</span><br></pre></td></tr></table></figure><h2 id="获得包名类名"><a href="#获得包名类名" class="headerlink" title="获得包名类名"></a>获得包名类名</h2><h3 id="获得包名类名-1"><a href="#获得包名类名-1" class="headerlink" title="获得包名类名"></a>获得包名类名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.getPackage().getName()</span><br></pre></td></tr></table></figure><h3 id="获得类名"><a href="#获得类名" class="headerlink" title="获得类名"></a>获得类名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.getName()</span><br></pre></td></tr></table></figure><h3 id="获得类简称"><a href="#获得类简称" class="headerlink" title="获得类简称"></a>获得类简称</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.getSimpleName()</span><br></pre></td></tr></table></figure><h2 id="获得成员变量的定义信息"><a href="#获得成员变量的定义信息" class="headerlink" title="获得成员变量的定义信息"></a>获得成员变量的定义信息</h2><h3 id="得到可见的所有成员变量"><a href="#得到可见的所有成员变量" class="headerlink" title="得到可见的所有成员变量"></a>得到可见的所有成员变量</h3><ul><li>包括继承的变量</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getFields()</span><br></pre></td></tr></table></figure><h3 id="获得包括不可见的所有变量"><a href="#获得包括不可见的所有变量" class="headerlink" title="获得包括不可见的所有变量"></a>获得包括不可见的所有变量</h3><ul><li>包括私有变量，不包括继承的变量</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getDeclaredFields()</span><br></pre></td></tr></table></figure><h3 id="获得可见的一个变量"><a href="#获得可见的一个变量" class="headerlink" title="获得可见的一个变量"></a>获得可见的一个变量</h3><blockquote><p><code>&lt;name&gt;</code>：变量名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getField(&lt;name&gt;)</span><br></pre></td></tr></table></figure><h3 id="获得包括不可见的一个变量"><a href="#获得包括不可见的一个变量" class="headerlink" title="获得包括不可见的一个变量"></a>获得包括不可见的一个变量</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getDeclaredField(&lt;name&gt;)</span><br></pre></td></tr></table></figure><h2 id="获得构造方法的定义信息"><a href="#获得构造方法的定义信息" class="headerlink" title="获得构造方法的定义信息"></a>获得构造方法的定义信息</h2><h3 id="获得可见的构造方法"><a href="#获得可见的构造方法" class="headerlink" title="获得可见的构造方法"></a>获得可见的构造方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getConstructors()</span><br></pre></td></tr></table></figure><h3 id="获得包括不可见的构造方法"><a href="#获得包括不可见的构造方法" class="headerlink" title="获得包括不可见的构造方法"></a>获得包括不可见的构造方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getDeclaredConstructors()</span><br></pre></td></tr></table></figure><h3 id="获得可见的一个构造方法"><a href="#获得可见的一个构造方法" class="headerlink" title="获得可见的一个构造方法"></a>获得可见的一个构造方法</h3><blockquote><p><code>&lt;int&gt;.class</code>：基本类型的类对象</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getConstructor(&lt;<span class="keyword">int</span>&gt;<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><h3 id="获得包括不可见的一个构造方法"><a href="#获得包括不可见的一个构造方法" class="headerlink" title="获得包括不可见的一个构造方法"></a>获得包括不可见的一个构造方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getDeclaredConstructor(&lt;<span class="keyword">int</span>&gt;<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><h2 id="获得方法的定义信息"><a href="#获得方法的定义信息" class="headerlink" title="获得方法的定义信息"></a>获得方法的定义信息</h2><h3 id="获得可见的方法"><a href="#获得可见的方法" class="headerlink" title="获得可见的方法"></a>获得可见的方法</h3><ul><li>包括继承的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getMethods()</span><br></pre></td></tr></table></figure><h3 id="获得本类定义的方法"><a href="#获得本类定义的方法" class="headerlink" title="获得本类定义的方法"></a>获得本类定义的方法</h3><ul><li>包括私有方法，不包括继承的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getDeclearedMethods()</span><br></pre></td></tr></table></figure><h3 id="获得可见的一个方法"><a href="#获得可见的一个方法" class="headerlink" title="获得可见的一个方法"></a>获得可见的一个方法</h3><blockquote><p><code>&lt;method&gt;</code>：方法名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getMethod(&lt;method&gt;, &lt;<span class="keyword">int</span>&gt;<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><h3 id="获得本类定义的一个方法"><a href="#获得本类定义的一个方法" class="headerlink" title="获得本类定义的一个方法"></a>获得本类定义的一个方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getDeclearedMethod(&lt;method&gt;, &lt;<span class="keyword">int</span>&gt;<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/23/%E5%8F%8D%E5%B0%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】将iOS备份移到外置磁盘</title>
      <link>https://feiju12138.github.io/2020/07/21/%E5%B0%86iOS%E5%A4%87%E4%BB%BD%E7%A7%BB%E5%88%B0%E5%A4%96%E7%BD%AE%E7%A3%81%E7%9B%98/</link>
      <guid>https://feiju12138.github.io/2020/07/21/%E5%B0%86iOS%E5%A4%87%E4%BB%BD%E7%A7%BB%E5%88%B0%E5%A4%96%E7%BD%AE%E7%A3%81%E7%9B%98/</guid>
      <pubDate>Tue, 21 Jul 2020 10:37:05 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;将iOS备份移到外置磁盘，节省Mac硬盘的占用&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>将iOS备份移到外置磁盘，节省Mac硬盘的占用</p><a id="more"></a><h2 id="保留旧备份（可选）"><a href="#保留旧备份（可选）" class="headerlink" title="保留旧备份（可选）"></a>保留旧备份（可选）</h2><ul><li>进入到iOS备份的目录</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open ~/Library/Application Support/MobileSync/</span><br></pre></td></tr></table></figure><ul><li>将<code>Backup</code>更名为<code>Backup.default</code></li></ul><h2 id="开始转移"><a href="#开始转移" class="headerlink" title="开始转移"></a>开始转移</h2><ul><li><p>复制<code>~/Library/Application Support/MobileSync/</code>下的<code>Backup</code>目录到外置磁盘根目录</p></li><li><p>建立软连接</p></li></ul><blockquote><p><code>&lt;name&gt;</code>：外置磁盘的目录名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /Volumes/&lt;name&gt;/Backup ~/Library/Application\ Support/MobileSync/Backup</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://sspai.com/post/33524" target="_blank" rel="noopener">少数派</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/21/%E5%B0%86iOS%E5%A4%87%E4%BB%BD%E7%A7%BB%E5%88%B0%E5%A4%96%E7%BD%AE%E7%A3%81%E7%9B%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】Valet 学习笔记</title>
      <link>https://feiju12138.github.io/2020/07/18/Valet%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <guid>https://feiju12138.github.io/2020/07/18/Valet%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sat, 18 Jul 2020 13:55:28 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Valet 是一个超级快的 Laravel 开发环境。Valet 并不是提到 Vagrant 或者 Homestead，而是提供了一个灵活的、速度极快的替代品，尤其是当你的电脑内存比较小的时候，它将是一个完美的选择。&lt;br&gt;Valet 只支持 Mac，而且需要你在本地安装 PHP 和 数据库服务，而这些通过 Homebrew 命令可以很容易的实现。Valet 使用极少的资源消耗提供了一个极速的本地开发环境。所以，它非常适合那些只需要 PHP/MySQL 而不需要一个完整的虚拟化开发环境的人。&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Valet 是一个超级快的 Laravel 开发环境。Valet 并不是提到 Vagrant 或者 Homestead，而是提供了一个灵活的、速度极快的替代品，尤其是当你的电脑内存比较小的时候，它将是一个完美的选择。<br>Valet 只支持 Mac，而且需要你在本地安装 PHP 和 数据库服务，而这些通过 Homebrew 命令可以很容易的实现。Valet 使用极少的资源消耗提供了一个极速的本地开发环境。所以，它非常适合那些只需要 PHP/MySQL 而不需要一个完整的虚拟化开发环境的人。</p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>确保80端口没有被占用</p></li><li><p>安装php</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install php</span><br></pre></td></tr></table></figure><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><h3 id="安装composer"><a href="#安装composer" class="headerlink" title="安装composer"></a>安装composer</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install composer</span><br></pre></td></tr></table></figure><h3 id="用composer安装valet"><a href="#用composer安装valet" class="headerlink" title="用composer安装valet"></a>用composer安装valet</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer global require laravel/valet</span><br></pre></td></tr></table></figure><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><ul><li>报错：<code>[dnsmasq] is not installed, installing it now via Brew...</code></li></ul><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><ul><li>没有安装<code>dnsmasq</code></li></ul><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install dnsmasq</span><br></pre></td></tr></table></figure><h3 id="安装valet"><a href="#安装valet" class="headerlink" title="安装valet"></a>安装valet</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valet install</span><br></pre></td></tr></table></figure><h2 id="valet命令"><a href="#valet命令" class="headerlink" title="valet命令"></a>valet命令</h2><h3 id="启动、重启、停止valet"><a href="#启动、重启、停止valet" class="headerlink" title="启动、重启、停止valet"></a>启动、重启、停止valet</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">valet start</span><br><span class="line">valet restart</span><br><span class="line">valet stop</span><br></pre></td></tr></table></figure><h3 id="安装、卸载valet"><a href="#安装、卸载valet" class="headerlink" title="安装、卸载valet"></a>安装、卸载valet</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">valet install</span><br><span class="line">valet uninstall</span><br></pre></td></tr></table></figure><h3 id="启动Laravel站点"><a href="#启动Laravel站点" class="headerlink" title="启动Laravel站点"></a>启动Laravel站点</h3><h4 id="park"><a href="#park" class="headerlink" title="park"></a>park</h4><ul><li>把当前工作目录作为 Valet 寻找站点的路径</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/Sites</span><br><span class="line"><span class="built_in">cd</span> ~/Sites</span><br><span class="line">valet park</span><br></pre></td></tr></table></figure><h4 id="link"><a href="#link" class="headerlink" title="link"></a>link</h4><p>把这个目录下所有文件夹都当做独立的不同站点，而当你只需要启动一个站点的时候，可以使用 link 命令</p><blockquote><p><code>&lt;name&gt;</code>：Laravel项目名称</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valet link &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="分享站点"><a href="#分享站点" class="headerlink" title="分享站点"></a>分享站点</h3><ul><li>公网访问</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valet share</span><br></pre></td></tr></table></figure><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">valet <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://9iphp.com/web/laravel/laravel-valet-local-dev-environment.html" target="_blank" rel="noopener">Specs的博客</a><br><a href="https://viencoding.com/article/55" target="_blank" rel="noopener">Vien的博客</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/18/Valet%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>【笔记】IDM百度网盘下载加速</title>
      <link>https://feiju12138.github.io/2020/07/18/IDM%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%8A%A0%E9%80%9F/</link>
      <guid>https://feiju12138.github.io/2020/07/18/IDM%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%8A%A0%E9%80%9F/</guid>
      <pubDate>Sat, 18 Jul 2020 10:04:10 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;利用大佬制作的&lt;code&gt;度云简易分享地址提取&lt;/code&gt;网页配合IDM（Internet Download Manager）软件实现百度网盘下载加速&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>利用大佬制作的<code>度云简易分享地址提取</code>网页配合IDM（Internet Download Manager）软件实现百度网盘下载加速</p><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>推荐一款Mac下的IDM软件<a href="http://www.neatdownloadmanager.com/index.php/en/" target="_blank" rel="noopener">NeatDownloadManager</a></p></li><li><p>配套Chrome插件<a href="https://chrome.google.com/webstore/detail/neatdownloadmanager-exten/cpcifbdmkopohnnofedkjghjiclmhdah" target="_blank" rel="noopener">NeatDownloadManager Extension</a></p></li></ul><h2 id="下载加速"><a href="#下载加速" class="headerlink" title="下载加速"></a>下载加速</h2><ul><li><p>将需要下载的文件分享，复制分享后的链接及密码</p></li><li><p>打开浏览器，在网址位置，加前缀后，直接粘贴在网址参数部分（问号之后）</p></li></ul><blockquote><p><code>前缀</code>：<a href="http://pan.naifei.cc/" target="_blank" rel="noopener">http://pan.naifei.cc/</a>?</p></blockquote><ul><li><p>解析成功后，会出现文件名，文件大小，及下载链接</p></li><li><p>点击<code>点我下载</code>后，IDM会自动开始下载</p></li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzA3MzMwNTY2OA==&scene=124#wechat_redirect" target="_blank" rel="noopener">微信公众号——科技心</a><br><a href="https://www.jianshu.com/p/05c7f7d38b4a" target="_blank" rel="noopener">简书——cherri二哈</a></p>]]></content:encoded>
      
      <comments>https://feiju12138.github.io/2020/07/18/IDM%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%8A%A0%E9%80%9F/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
